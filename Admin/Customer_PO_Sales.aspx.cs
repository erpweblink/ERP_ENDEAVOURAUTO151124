using System;
using System.Collections.Generic;
using System.Configuration;
using System.Data;
using System.Data.SqlClient;
using System.IO;
using System.Linq;
using System.Security.Cryptography;
using System.Text;
using System.Web;
using System.Web.UI;
using System.Web.UI.WebControls;

public partial class Admin_Customer_PO_Sales : System.Web.UI.Page
{
    SqlConnection con = new SqlConnection(ConfigurationManager.ConnectionStrings["ConnectionString"].ConnectionString);
    string ID = "";
    string id = "";
    DataTable Dt_Items = new DataTable();
    DataTable Dt_Itemsdetails = new DataTable();
    DataTable Dt_Component = new DataTable();
    protected void Page_Load(object sender, EventArgs e)
    {
        if (!IsPostBack)
        {
            // CustPOautogenerated();
            ViewState["RowNo"] = 0;
            //Dt_Items.Columns.AddRange(new DataColumn[10] { new DataColumn("id"), new DataColumn("JobNo"), new DataColumn("Discription"), new DataColumn("HSN/SAC"), new DataColumn("Rate"), new DataColumn("Unit"), new DataColumn("Quntity"), new DataColumn("Tax"),   new DataColumn("Discount"), new DataColumn("Total_Amount") });
            //Dt_Items.Columns.AddRange(new DataColumn[13] { new DataColumn("id"), new DataColumn("JobNo"), new DataColumn("MateName"), new DataColumn("CompName"),new DataColumn("Discription"), new DataColumn("PrintDescription"), new DataColumn("HSN/SAC"), new DataColumn("Rate"), new DataColumn("Unit"), new DataColumn("Quntity"), new DataColumn("Tax"), new DataColumn("Discount"), new DataColumn("Total_Amount") });
            Dt_Items.Columns.AddRange(new DataColumn[10] { new DataColumn("id"), new DataColumn("MateName"), new DataColumn("PrintDescription"), new DataColumn("HSN/SAC"), new DataColumn("Rate"), new DataColumn("Unit"), new DataColumn("Quntity"), new DataColumn("Tax"), new DataColumn("Discount"), new DataColumn("Total_Amount") });
            ViewState["CPO_Product"] = Dt_Items;

            if (Request.QueryString["Id"] != null)
            {
                ID = Decrypt(Request.QueryString["Id"].ToString());
                hdnID.Value = ID;      
                Load_Record();
                //  GetJobNO();
                //DataTable dt1 = new DataTable();
                //SqlDataAdapter sad1 = new SqlDataAdapter("select * from tblCustomerContactPerson where CustName='" + txt_Customer_name.Text + "'", con);
                //sad1.Fill(dt1);
                //txt_kind_att.DataTextField = "ContactPerName";
                //txt_kind_att.DataSource = dt1;
                //txt_kind_att.DataBind();
            }

            if (Request.QueryString["Pono"] != null)
            {
                id = Decrypt(Request.QueryString["Pono"].ToString());
                ReportLoaddata();
                ReadOnlyTextReport();
            }

            //NEW CODE FOR FETCH THE QUOTATION DATA START
            //Edit Quotation
            if (Request.QueryString["Quotation_no"] != null)
            {
                ID = Decrypt(Request.QueryString["Quotation_no"].ToString());
                ShowHeaderEdit();
                ShowDtlEdit();
                hidden.Value = ID;
            }

            if (Request.QueryString["ID"] != null)
            {
                //Idd = Decrypt(Request.QueryString["ID"].ToString());
                //ReportLoadData();
                //reportresdonly();
            }
            //NEW CODE FOR FETCH THE QUOTATION DATA END
        }
    }

    //NEW METHODS FOR QUOTATION DATA FETCH START
    protected void ShowHeaderEdit()
    {
        SqlDataAdapter Da = new SqlDataAdapter("SELECT JobNo,Quotation_no,Customer_Name,SubCustomer,Quotation_Date,ExpiryDate,Address,Mobile_No,Phone_No,GST_No,State_Code,kind_Att,CGST,SGST,AllTotal_price,Total_in_word,[Term_Condition_1],[Term_Condition_2],[Term_Condition_3],[Term_Condition_4],[Term_Condition_5],[Term_Condition_6],IGST FROM tbl_Quotation_two_Hdr WHERE Quotation_no='" + ID + "'", con);
        DataTable Dt = new DataTable();
        Da.Fill(Dt);
        if (Dt.Rows.Count > 0)
        {
            ddlagainstby.Enabled = false;
            ddlagainstby.SelectedItem.Text = "Order";
            ddlquotationno.SelectedItem.Text = Dt.Rows[0]["Quotation_no"].ToString();
            txt_Customer_name.Text = Dt.Rows[0]["Customer_Name"].ToString();
            txtsubcust.Text = Dt.Rows[0]["SubCustomer"].ToString();
            txt_delivery_address.Text = Dt.Rows[0]["Address"].ToString();
            txt_mobile_no.Text = Dt.Rows[0]["Mobile_No"].ToString();
            txt_kind_att.Text = Dt.Rows[0]["kind_Att"].ToString();
            txt_gst_no.Text = Dt.Rows[0]["GST_No"].ToString();
            txtstatecode.Text = Dt.Rows[0]["State_Code"].ToString();

            string str = Dt.Rows[0]["Term_Condition_1"].ToString();
            string str1 = Dt.Rows[0]["Term_Condition_2"].ToString();
            string str2 = Dt.Rows[0]["Term_Condition_3"].ToString();
            string str3 = Dt.Rows[0]["Term_Condition_4"].ToString();
            string str4 = Dt.Rows[0]["Term_Condition_5"].ToString();
            string str5 = Dt.Rows[0]["Term_Condition_6"].ToString();
            string[] arrstr = str.ToString().Split('-');
            string[] arrstr1 = str1.ToString().Split('-');
            string[] arrstr2 = str2.ToString().Split('-');
            string[] arrstr3 = str3.ToString().Split('-');
            string[] arrstr4 = str4.ToString().Split('-');
            string[] arrstr5 = str5.ToString().Split('-');

            if (arrstr.Length > 0)
            {
                txt_term_1.Text = arrstr[0].ToString();
                txt_condition_1.Text = arrstr[1].ToString();
            }
            if (arrstr1.Length > 0)
            {
                txt_term_2.Text = arrstr1[0].ToString();
                txt_condition_2.Text = arrstr1[1].ToString();
            }
            if (arrstr2.Length > 0)
            {
                txt_term_3.Text = arrstr2[0].ToString();
                txt_condition_3.Text = arrstr2[1].ToString();
            }
            if (arrstr3.Length > 0)
            {
                txt_term_4.Text = arrstr3[0].ToString();
                txt_condition_4.Text = arrstr3[1].ToString();
            }

            if (arrstr4.Length > 0)
            {
                txt_term_5.Text = arrstr4[0].ToString();
                txt_condition_5.Text = arrstr4[1].ToString();
            }
            if (arrstr5.Length > 0)
            {
                txt_term_6.Text = arrstr5[0].ToString();
                txt_condition_6.Text = arrstr5[1].ToString();
            }
        }

        SqlDataAdapter Sda = new SqlDataAdapter("SELECT * FROM tblCustomerContactPerson WHERE CustName='" + txt_Customer_name.Text + "'", con);
        DataTable Sdt = new DataTable();
        Sda.Fill(Sdt);
        Grd_MAIL.DataSource = Sdt;
        Grd_MAIL.DataBind();

        //SqlDataAdapter Saa = new SqlDataAdapter("SELECT id, Jobno FROM [tbl_Quotationjobno] WHERE Quotation_no='" + txt_Quo_No.Text + "'", con);
        //DataTable dttt = new DataTable();
        //Saa.Fill(dttt);
        //grdjobno.DataSource = dttt;
        //grdjobno.DataBind();
    }

    protected void ShowDtlEdit()
    {
        ////Automatic description bind in job number from quaation details table
        DataTable dt3 = new DataTable();
        //SqlDataAdapter sad3 = new SqlDataAdapter("select * from vw_Quot_pdf where JobNo='" + txt_job_no.Text + "'", con);
        //SqlDataAdapter sad3 = new SqlDataAdapter("select * from [tbl_Quotation_Dtl_Sales] where Quotation_no='" + ddlquotationno.SelectedItem.Text + "'", con);
        SqlDataAdapter sad3 = new SqlDataAdapter("select  product as MateName ,  Description As PrintDescription, * from [tbl_Quotation_two_Dtls] where Quotation_no='" + ddlquotationno.SelectedItem.Text + "'", con);
        sad3.Fill(dt3);
        int count = 1;
        if (dt3.Rows.Count > 0)
        {
            ViewState["RowNo"] = 0;
            Dt_Itemsdetails.Columns.AddRange(new DataColumn[10] { new DataColumn("Id"), new DataColumn("MateName"),
                      new DataColumn("PrintDescription"), new DataColumn("HSN"),
                    new DataColumn("Rate"),  new DataColumn("Units"),
                    new DataColumn("Qty"),  new DataColumn("Tax"),
                    new DataColumn("Disc_per"), new DataColumn("total")
                  });

            ViewState["Customerdetails"] = Dt_Itemsdetails;
            for (int i = 0; i < dt3.Rows.Count; i++)
            {
                // Dt_Itemsdetails.Columns.AddRange(new DataColumn[10] { new DataColumn("Id"), new DataColumn("JobNo"), new DataColumn("CompName"), new DataColumn("HSN"), new DataColumn("Rate"), new DataColumn("Units"), new DataColumn("Qty"), new DataColumn("Tax"), new DataColumn("Disc_per"), new DataColumn("FTotal") });    

                // Dt_Itemsdetails.Rows.Add(count,  dt3.Rows[i]["JobNo"].ToString(), dt3.Rows[i]["CompName"].ToString(), dt3.Rows[i]["HSN"].ToString(), dt3.Rows[i]["Rate"].ToString(), dt3.Rows[i]["Units"].ToString(), dt3.Rows[i]["Qty"].ToString(), dt3.Rows[i]["Tax"].ToString(), dt3.Rows[i]["Disc_per"].ToString(), dt3.Rows[i]["total"].ToString());
                Dt_Itemsdetails.Rows.Add(count, dt3.Rows[i]["MateName"].ToString(), dt3.Rows[i]["PrintDescription"].ToString(), dt3.Rows[i]["HSN"].ToString(), dt3.Rows[i]["Rate"].ToString(), dt3.Rows[i]["Units"].ToString(), dt3.Rows[i]["Qty"].ToString(), dt3.Rows[i]["Tax"].ToString(), dt3.Rows[i]["Disc_per"].ToString(), dt3.Rows[i]["total"].ToString());
                count = count + 1;
            }
            quatationgrid.DataSource = Dt_Itemsdetails;
            quatationgrid.DataBind();
            quatationgrid.EmptyDataText = "Not Records Found"; //9975468880         
        }

        //SqlDataAdapter Da = new SqlDataAdapter("SELECT * FROM tbl_Quotation_Dtl_Sales WHERE Quotation_no='" + ddlquotationno.SelectedItem.Text + "'", con);
        //DataTable DTCOMP = new DataTable();
        //Da.Fill(DTCOMP);

        //int count = 1;
        //if (DTCOMP.Rows.Count > 0)
        //{
        //    if (Dt_Itemsdetails.Columns.Count < 1)
        //    {
        //        Show_Grid();
        //    }

        //    ViewState["Customerdetails"] = Dt_Itemsdetails;
        //    for (int i = 0; i < DTCOMP.Rows.Count; i++)
        //    {

        //        // Dt_Itemsdetails.Columns.AddRange(new DataColumn[10] { new DataColumn("Id"), new DataColumn("JobNo"), new DataColumn("CompName"), new DataColumn("HSN"), new DataColumn("Rate"), new DataColumn("Units"), new DataColumn("Qty"), new DataColumn("Tax"), new DataColumn("Disc_per"), new DataColumn("FTotal") });

        //        Dt_Itemsdetails.Rows.Add(count, DTCOMP.Rows[i]["JobNo"].ToString(), DTCOMP.Rows[i]["CompName"].ToString(), DTCOMP.Rows[i]["HSN"].ToString(), DTCOMP.Rows[i]["Rate"].ToString(), DTCOMP.Rows[i]["Units"].ToString(), DTCOMP.Rows[i]["Qty"].ToString(), DTCOMP.Rows[i]["Tax"].ToString(), DTCOMP.Rows[i]["Disc_per"].ToString(), DTCOMP.Rows[i]["total"].ToString());

        //        count = count + 1;
        //    }
        //    quatationgrid.DataSource = Dt_Itemsdetails;
        //    quatationgrid.DataBind();
        //    quatationgrid.EmptyDataText = "Not Records Found";
        //}


        SqlDataAdapter Sda = new SqlDataAdapter("SELECT * FROM tbl_Quotation_two_Hdr WHERE Quotation_no='" + ddlquotationno.SelectedItem.Text + "'", con);
        DataTable Sdt = new DataTable();
        Sda.Fill(Sdt);
        if (Sdt.Rows.Count > 0)
        {
            txt_cgst_amt.Text = Sdt.Rows[0]["CGST"].ToString();
            txt_sgst_amt.Text = Sdt.Rows[0]["SGST"].ToString();
            txt_grand_total.Text = Sdt.Rows[0]["AllTotal_price"].ToString();
            //lbl_total_amt_Value.Text = Sdt.Rows[0]["Total_in_word"].ToString();
        }
    }

    //NEW METHODS FOR QUOTATION DATA FETCH END

    private void ddlQuotationno()
    {
        SqlDataAdapter ad = new SqlDataAdapter("SELECT Id,Quotation_no FROM [tbl_Quotation_two_Hdr] WHERE Customer_Name = '" + txt_Customer_name.Text + "' AND IsDeleted ='0'", con);
        DataTable dt = new DataTable();
        ad.Fill(dt);
        if (dt.Rows.Count > 0)
        {
            ddlquotationno.DataSource = dt;
            ddlquotationno.DataTextField = "Quotation_no";
            ddlquotationno.DataBind();
            ddlquotationno.Items.Insert(0, " --  Select Quotation No. -- ");
        }
    }

    protected void quatationgrid_RowDataBound(object sender, GridViewRowEventArgs e)
    {
        if (e.Row.RowType == DataControlRowType.DataRow)
        {
            DataRowView row = e.Row.DataItem as DataRowView;
            Total += Convert.ToDecimal(DataBinder.Eval(e.Row.DataItem, "total"));   //Total_Amount issu database filed
            txt_total.Text = Total.ToString("##.00");
            TTotal += Convert.ToDecimal(DataBinder.Eval(e.Row.DataItem, "total"));
            hdnPoProductTot.Value = txt_total.Text;

            Alltotal = Total;
            txt_total.Text = Alltotal.ToString("##.00");

            //var GSTamt = (txt_total.Text * 100 / 2);

            var GSTamt = (Alltotal * 9 / 100);
            var IGSTamt = (Alltotal * 18 / 100);

            decimal grd_total;
            if (!string.IsNullOrEmpty(txt_total_amount.Text))
            {
                grd_total = 0;
            }
            else
            {
                decimal val1 = Convert.ToDecimal(txt_total.Text);
                //decimal val2 = Convert.ToDecimal(txt_sgst_amt.Text);
                //decimal val3 = Convert.ToDecimal(txt_cgst_amt.Text);
                decimal CGST = Convert.ToDecimal(GSTamt);
                decimal SGST = Convert.ToDecimal(GSTamt);

                grd_total = (val1 + CGST + SGST);
            }

            //new code 
            if (txtstatecode.Text == "27 MAHARASHTRA")
            {
                txt_sgst_amt.Text = GSTamt.ToString();
                txt_cgst_amt.Text = GSTamt.ToString();
                txt_igst_amt.Text = "0";
            }
            else
            {
                txt_sgst_amt.Text = "0";
                txt_cgst_amt.Text = "0";
                txt_igst_amt.Text = IGSTamt.ToString();
            }



            //txt_sgst_amt.Text = GSTamt.ToString();
            //txt_cgst_amt.Text = GSTamt.ToString();
            txt_grand_total.Text = grd_total.ToString();
            //End
            string isNegative = "";
            try
            {
                //string number = hfTotal.Value;
                //number = Convert.ToDouble(number).ToString();

                //lbl_Amount_In_Word.Text = isNegative + ConvertToWords(number);

                string number = txt_grand_total.Text;
                //number = Convert.ToDouble(number).ToString();

                lbl_Amount_In_Word.Text = isNegative + ConvertToWords(number);
            }
            catch (Exception ee)
            {
                throw ee;
            }
        }
    }

    protected void ReadOnlyTextReport()
    {
        txtShippingAddr.ReadOnly = true;
        tbl.Visible = false;
        btnCancel.Text = "Close";
        // txt_job_no.ReadOnly = true;
        txt_Customer_name.ReadOnly = true;
        //txt_vehicel_no.ReadOnly = true;
        txt_term_4.ReadOnly = true;
        txt_term_3.ReadOnly = true;
        txt_term_2.ReadOnly = true;
        txt_term_1.ReadOnly = true;
        txt_condition_1.ReadOnly = true;
        txt_condition_2.ReadOnly = true;
        txt_condition_3.ReadOnly = true;
        txt_condition_4.ReadOnly = true;
        txt_round_off.ReadOnly = true;
        txt_ref_no.ReadOnly = true;
        txt_mobile_no.ReadOnly = true;
        txt_delivery_address.ReadOnly = true;
        //txt_email_id.ReadOnly = true;
        //txt_kind_att.ReadOnly = true;
        txt_po_date.ReadOnly = true;
        txt_po_no.ReadOnly = true;
        txt_pay_term.ReadOnly = true;
        txt_gst_no.ReadOnly = true;
        btn_save.Visible = false;
        gvPurchaseRecord.Columns[9].Visible = false;
        headerreport.InnerText = " Customer PO Report";
        txtstatecode.ReadOnly = true;
        // check_address.Enabled = false;
    }

    protected void ReportLoaddata()
    {
        DataTable Dt = new DataTable();
        SqlDataAdapter da = new SqlDataAdapter("select * from vw_CustomerPO WHERE Pono='" + id + "'", con);
        da.Fill(Dt);

        if (Dt.Rows.Count > 0)
        {
            txt_po_no.Enabled = false;
            btn_save.Text = "Update";
            txt_Customer_name.Text = Dt.Rows[0]["CustomerName"].ToString();
            txtsubcust.Text = Dt.Rows[0]["SubCustomer"].ToString();
            txt_po_no.Text = Dt.Rows[0]["Pono"].ToString();
            txt_job_no.Text = Dt.Rows[0]["JobNo"].ToString();
            DateTime ffff1 = Convert.ToDateTime(Dt.Rows[0]["PoDate"].ToString());
            txt_po_date.Text = ffff1.ToString("yyyy-MM-dd");
            txt_ref_no.Text = Dt.Rows[0]["RefNo"].ToString();
            txt_mobile_no.Text = Dt.Rows[0]["Mobileno"].ToString();
            txt_delivery_address.Text = Dt.Rows[0]["DeliveryAddress"].ToString();
            // txt_kind_att.SelectedItem.Text = Dt.Rows[0]["KindAtt"].ToString();
            txtShippingAddr.Text = Dt.Rows[0]["ShippingAddress"].ToString();
            txt_gst_no.Text = Dt.Rows[0]["GstNo"].ToString();
            // txt_vehicel_no.Text = Dt.Rows[0]["VehicelNo"].ToString();
            txt_pay_term.Text = Dt.Rows[0]["PayTerm"].ToString();

            txt_cgst_amt.Text = Dt.Rows[0]["Cgst"].ToString();
            txt_sgst_amt.Text = Dt.Rows[0]["Sgst"].ToString();
            txt_igst_amt.Text = Dt.Rows[0]["Igst"].ToString();
            txt_total.Text = Dt.Rows[0]["AllTotalPrice"].ToString();
            lbl_Amount_In_Word.Text = Dt.Rows[0]["TotalInWord"].ToString();
            txt_round_off.Text = Dt.Rows[0]["RoundOff"].ToString();
            txt_grand_total.Text = Dt.Rows[0]["GrandTotal"].ToString();

            string str = Dt.Rows[0]["Term_Condition_1"].ToString();
            string str1 = Dt.Rows[0]["Term_Condition_2"].ToString();
            string str2 = Dt.Rows[0]["Term_Condition_3"].ToString();
            string str3 = Dt.Rows[0]["Term_Condition_4"].ToString();
            string str4 = Dt.Rows[0]["Term_Condition_5"].ToString();
            string str5 = Dt.Rows[0]["Term_Condition_6"].ToString();
            string[] arrstr = str.ToString().Split('-');
            string[] arrstr1 = str1.ToString().Split('-');
            string[] arrstr2 = str2.ToString().Split('-');
            string[] arrstr3 = str3.ToString().Split('-');
            string[] arrstr4 = str4.ToString().Split('-');
            string[] arrstr5 = str5.ToString().Split('-');
            if (arrstr.Length > 0)
            {
                txt_term_1.Text = arrstr[0].ToString();
                txt_condition_1.Text = arrstr[1].ToString();
            }

            if (arrstr1.Length > 0)
            {
                txt_term_2.Text = arrstr1[0].ToString();
                txt_condition_2.Text = arrstr1[1].ToString();
            }

            if (arrstr2.Length > 0)
            {
                txt_term_3.Text = arrstr2[0].ToString();
                txt_condition_3.Text = arrstr2[1].ToString();
            }
            if (arrstr3.Length > 0)
            {
                txt_term_4.Text = arrstr3[0].ToString();
                txt_condition_4.Text = arrstr3[1].ToString();
            }
            //if (arrstr4.Length > 0)
            //{
            //    txt_term_5.Text = arrstr4[0].ToString();
            //    txt_condition_5.Text = arrstr4[1].ToString();
            //}
            //if (arrstr5.Length > 0)
            //{
            //    txt_term_6.Text = arrstr5[0].ToString();
            //    txt_condition_6.Text = arrstr5[1].ToString();
            //}
        }

        DataTable Dtproduct = new DataTable();
        //SqlDataAdapter daa = new SqlDataAdapter("SELECT Description,Hsn_Sac,TaxPercenteage,Quantity,Unit,Rate,DiscountPercentage,Total FROM vw_CustomerPO WHERE Pono='" + id + "' ", con);
        SqlDataAdapter daa = new SqlDataAdapter("SELECT JobNo,Description,Hsn_Sac,Rate,Unit,Quantity,TaxPercenteage,DiscountPercentage,Total FROM VW_CUSTPODETAILSNEW WHERE Pono='" + id + "' ", con);

        da.Fill(Dtproduct);

        int count = 1;
        if (Dtproduct.Rows.Count > 0)
        {
            if (Dt_Items.Columns.Count < 1)
            {
                //Show_Grid();
                Show_Grid1();
            }

            for (int i = 0; i < Dtproduct.Rows.Count; i++)
            {
                Dt_Items.Rows.Add(count, Dtproduct.Rows[i]["JobNo"].ToString(), Dtproduct.Rows[i]["Description"].ToString(), Dtproduct.Rows[i]["Hsn_Sac"].ToString(), Dtproduct.Rows[i]["Rate"].ToString(), Dtproduct.Rows[i]["Unit"].ToString(), Dtproduct.Rows[i]["Quantity"].ToString(), Dtproduct.Rows[i]["TaxPercenteage"].ToString(), Dtproduct.Rows[i]["DiscountPercentage"].ToString(), Dtproduct.Rows[i]["Total"].ToString());


                //  Dt_Items.Rows.Add(count, Dtproduct.Rows[i]["Description"].ToString(), Dtproduct.Rows[i]["Hsn_Sac"].ToString(), Dtproduct.Rows[i]["TaxPercenteage"].ToString(), Dtproduct.Rows[i]["Quantity"].ToString(), Dtproduct.Rows[i]["Unit"].ToString(), Dtproduct.Rows[i]["Rate"].ToString(), Dtproduct.Rows[i]["DiscountPercentage"].ToString(), Dtproduct.Rows[i]["Total"].ToString());
                count = count + 1;
            }
        }

        gvPurchaseRecord.DataSource = Dt_Items;
        gvPurchaseRecord.DataBind();

        //email load
        //new change job no
        DataTable dtt = new DataTable();
        SqlDataAdapter sad1 = new SqlDataAdapter("select * from tblCustomerPOMail where pono='" + txt_po_no.Text + "' ", con);
        sad1.Fill(dtt);
        Grd_MAIL.DataSource = dtt;
        Grd_MAIL.DataBind();
        Grd_MAIL.EmptyDataText = "Record Not Found";
    }

    public string Decrypt(string cipherText)
    {
        string EncryptionKey = "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ";
        cipherText = cipherText.Replace(" ", "+");
        byte[] cipherBytes = Convert.FromBase64String(cipherText);
        using (Aes encryptor = Aes.Create())
        {
            Rfc2898DeriveBytes pdb = new Rfc2898DeriveBytes(EncryptionKey, new byte[] {
            0x49, 0x76, 0x61, 0x6e, 0x20, 0x4d, 0x65, 0x64, 0x76, 0x65, 0x64, 0x65, 0x76
        });
            encryptor.Key = pdb.GetBytes(32);
            encryptor.IV = pdb.GetBytes(16);
            using (MemoryStream ms = new MemoryStream())
            {
                using (CryptoStream cs = new CryptoStream(ms, encryptor.CreateDecryptor(), CryptoStreamMode.Write))
                {
                    cs.Write(cipherBytes, 0, cipherBytes.Length);
                    cs.Close();
                }
                cipherText = Encoding.Unicode.GetString(ms.ToArray());
            }
        }
        return cipherText;
    }

    private void Load_Record()
    {
        DataTable Dt = new DataTable();
        //SqlDataAdapter da = new SqlDataAdapter("select CustomerPO_Dtls_Both.JobNo,CustomerPO_Dtls_Both.Quotationno,CustomerPO_Hdr_Sales.Id,CustomerPO_Hdr_Sales.JobNo,CustomerPO_Hdr_Sales.ShippingAddress,CustomerName,SubCustomer,Pono,PoDate,RefNo,Mobileno,KindAtt,DeliveryAddress,EmailId,GstNo,VehicelNo,PayTerm,Cgst,Sgst,Igst,AllTotalPrice,TotalInWord, RoundOff, GrandTotal, Term_Condition_1, Term_Condition_2, Term_Condition_3, Term_Condition_4, Description, Hsn_Sac,Rate,Unit,Quantity, TaxPercenteage, DiscountPercentage, Total,statecode from CustomerPO_Hdr_Sales INNER JOIN CustomerPO_Dtls_Both ON CustomerPO_Hdr_Sales.Id = CustomerPO_Dtls_Both.PurchaseId WHERE CustomerPO_Hdr_Sales.Id='" + ID + "'", con);
        SqlDataAdapter da = new SqlDataAdapter("select CustomerPO_Dtls_Both.JobNo,CustomerPO_Dtls_Both.MateName,CustomerPO_Dtls_Both.PrintDescription,CustomerPO_Dtls_Both.Quotationno,CustomerPO_Hdr_Both.Id,CustomerPO_Hdr_Both.JobNo,CustomerPO_Hdr_Both.ShippingAddress,CustomerName,SubCustomer,Pono,PoDate,RefNo,Mobileno,KindAtt,DeliveryAddress,EmailId,GstNo,VehicelNo,PayTerm,Cgst,Sgst,Igst,AllTotalPrice,TotalInWord, RoundOff,AgainstBy, GrandTotal, Term_Condition_1, Term_Condition_2, Term_Condition_3, Term_Condition_4,Term_Condition_5,Term_Condition_6, Description, Hsn_Sac,Rate,Unit,Quantity, TaxPercenteage, DiscountPercentage, Total,statecode,Imagepath from CustomerPO_Hdr_Both INNER JOIN CustomerPO_Dtls_Both ON CustomerPO_Hdr_Both.Id = CustomerPO_Dtls_Both.PurchaseId WHERE CustomerPO_Hdr_Both.Id='" + ID + "'", con);
        da.Fill(Dt);

        if (Dt.Rows.Count > 0)
        {
            ddlagainstby.Enabled = false;
            txt_po_no.Enabled = false;

 
            // txt_job_no.Enabled = false;
            btn_save.Text = "Update";
            txt_Customer_name.Text = Dt.Rows[0]["CustomerName"].ToString();
            txtsubcust.Text = Dt.Rows[0]["SubCustomer"].ToString();
            ddlquotationno.SelectedItem.Text = Dt.Rows[0]["Quotationno"].ToString();
            ddlagainstby.SelectedItem.Text = Dt.Rows[0]["AgainstBy"].ToString();
            txt_po_no.Text = Dt.Rows[0]["Pono"].ToString();
            // txt_job_no.Text = Dt.Rows[0]["JobNo"].ToString();
            DateTime ffff1 = Convert.ToDateTime(Dt.Rows[0]["PoDate"].ToString());
            txt_po_date.Text = ffff1.ToString("yyyy-MM-dd");
            txt_ref_no.Text = Dt.Rows[0]["RefNo"].ToString();
            txt_mobile_no.Text = Dt.Rows[0]["Mobileno"].ToString();
            txtShippingAddr.Text = Dt.Rows[0]["ShippingAddress"].ToString();
            txt_delivery_address.Text = Dt.Rows[0]["DeliveryAddress"].ToString();
            txt_kind_att.Text = Dt.Rows[0]["KindAtt"].ToString();
            //txt_email_id.Text = Dt.Rows[0]["EmailId"].ToString();
            txt_gst_no.Text = Dt.Rows[0]["GstNo"].ToString();
            // txt_vehicel_no.Text = Dt.Rows[0]["VehicelNo"].ToString();
            txt_pay_term.Text = Dt.Rows[0]["PayTerm"].ToString();
            txtstatecode.Text = Dt.Rows[0]["statecode"].ToString();
            txt_cgst_amt.Text = Dt.Rows[0]["Cgst"].ToString();
            txt_sgst_amt.Text = Dt.Rows[0]["Sgst"].ToString();
            txt_igst_amt.Text = Dt.Rows[0]["Igst"].ToString();
            txt_total.Text = Dt.Rows[0]["AllTotalPrice"].ToString();
            lbl_Amount_In_Word.Text = Dt.Rows[0]["TotalInWord"].ToString();
            txt_round_off.Text = Dt.Rows[0]["RoundOff"].ToString();
            txt_grand_total.Text = Dt.Rows[0]["GrandTotal"].ToString();

            if (!string.IsNullOrEmpty(Dt.Rows[0]["Imagepath"].ToString()))
            {
                lblPath.Text = Dt.Rows[0]["Imagepath"].ToString();
            }

            string str = Dt.Rows[0]["Term_Condition_1"].ToString();
            string str1 = Dt.Rows[0]["Term_Condition_2"].ToString();
            string str2 = Dt.Rows[0]["Term_Condition_3"].ToString();
            string str3 = Dt.Rows[0]["Term_Condition_4"].ToString();
            string str4 = Dt.Rows[0]["Term_Condition_5"].ToString();
            string str5 = Dt.Rows[0]["Term_Condition_6"].ToString();
            string[] arrstr = str.ToString().Split('-');
            string[] arrstr1 = str1.ToString().Split('-');
            string[] arrstr2 = str2.ToString().Split('-');
            string[] arrstr3 = str3.ToString().Split('-');
            string[] arrstr4 = str4.ToString().Split('-');
            string[] arrstr5 = str5.ToString().Split('-');

            if (arrstr.Length > 0)
            {
                txt_term_1.Text = arrstr[0].ToString();
                txt_condition_1.Text = arrstr[1].ToString();
            }

            if (arrstr1.Length > 0)
            {
                txt_term_2.Text = arrstr1[0].ToString();
                txt_condition_2.Text = arrstr1[1].ToString();
            }

            if (arrstr2.Length > 0)
            {
                txt_term_3.Text = arrstr2[0].ToString();
                txt_condition_3.Text = arrstr2[1].ToString();
            }
            if (arrstr3.Length > 0)
            {
                txt_term_4.Text = arrstr3[0].ToString();
                txt_condition_4.Text = arrstr3[1].ToString();
            }
            if (arrstr4.Length > 0)
            {
                txt_term_5.Text = arrstr4[0].ToString();
                txt_condition_5.Text = arrstr4[1].ToString();
            }
            if (arrstr5.Length > 0)
            {
                txt_term_6.Text = arrstr5[0].ToString();
                txt_condition_6.Text = arrstr5[1].ToString();
            }
        }
        DataTable Dtproduct = new DataTable();
        SqlDataAdapter daa = new SqlDataAdapter("SELECT JobNo,MateName,Description,MateName,Hsn_Sac,Rate,Unit,Quantity,TaxPercenteage,DiscountPercentage,Total FROM CustomerPO_Dtls_Both WHERE Id='" + hdnID.Value + "' ", con);
        // SqlDataAdapter daa = new SqlDataAdapter("SELECT * FROM CustomerPO_Dtls_Both WHERE Id='" + hdnID.Value + "' ", con);
        da.Fill(Dtproduct);

        int count = 1;
        if (Dtproduct.Rows.Count > 0)
        {
            if (Dt_Items.Columns.Count < 1)
            {
                Show_Grid();
            }

            for (int i = 0; i < Dtproduct.Rows.Count; i++)
            {
                //Dt_Items.Rows.Add(count, Dtproduct.Rows[i]["JobNo"].ToString(), Dtproduct.Rows[i]["Description"].ToString(), Dtproduct.Rows[i]["Hsn_Sac"].ToString(), Dtproduct.Rows[i]["Rate"].ToString(), Dtproduct.Rows[i]["Unit"].ToString(), Dtproduct.Rows[i]["Quantity"].ToString(), Dtproduct.Rows[i]["TaxPercenteage"].ToString(),   Dtproduct.Rows[i]["DiscountPercentage"].ToString(), Dtproduct.Rows[i]["Total"].ToString());
                Dt_Items.Rows.Add(count, Dtproduct.Rows[i]["MateName"].ToString(), Dtproduct.Rows[i]["PrintDescription"].ToString(), Dtproduct.Rows[i]["Hsn_Sac"].ToString(), Dtproduct.Rows[i]["Rate"].ToString(), Dtproduct.Rows[i]["Unit"].ToString(), Dtproduct.Rows[i]["Quantity"].ToString(), Dtproduct.Rows[i]["TaxPercenteage"].ToString(), Dtproduct.Rows[i]["DiscountPercentage"].ToString(), Dtproduct.Rows[i]["Total"].ToString());
                count = count + 1;
            }
        }

        gvPurchaseRecord.DataSource = Dt_Items;
        gvPurchaseRecord.DataBind();

        //email load
        // new change job no 
        DataTable dtt = new DataTable();
        SqlDataAdapter sad1 = new SqlDataAdapter("select * from tblCustomerPOMail where pono='" + txt_po_no.Text + "' ", con);
        sad1.Fill(dtt);
        Grd_MAIL.DataSource = dtt;
        Grd_MAIL.DataBind();
        Grd_MAIL.EmptyDataText = "Record Not Found";
    }

    [System.Web.Script.Services.ScriptMethod()]
    [System.Web.Services.WebMethod]
    public static List<string> GeCustomerList(string prefixText, int count)
    {
        return AutoFillCustomerlist(prefixText);
    }
    public static List<string> AutoFillCustomerlist(string prefixText)
    {
        using (SqlConnection con = new SqlConnection())
        {
            con.ConnectionString = ConfigurationManager.ConnectionStrings["connectionString"].ConnectionString;

            using (SqlCommand com = new SqlCommand())
            {
                com.CommandText = "select DISTINCT CustomerName,Custid from tblCustomer where " + "CustomerName like @Search + '%' " + "AND isdeleted = '0' AND IsStatus = '1'";

                com.Parameters.AddWithValue("@Search", prefixText);
                com.Connection = con;
                con.Open();
                List<string> CustomerName = new List<string>();

                using (SqlDataReader sdr = com.ExecuteReader())
                {
                    while (sdr.Read())
                    {
                        CustomerName.Add(sdr["CustomerName"].ToString());
                    }
                }
                con.Close();
                return CustomerName;
            }
        }
    }

    [System.Web.Script.Services.ScriptMethod()]
    [System.Web.Services.WebMethod]
    public static List<string> GeJobNoList(string prefixText, int count)
    {
        return AutoFillJobnolist(prefixText);
    }
    public static List<string> AutoFillJobnolist(string prefixText)
    {
        using (SqlConnection con = new SqlConnection())
        {
            con.ConnectionString = ConfigurationManager.ConnectionStrings["connectionString"].ConnectionString;

            using (SqlCommand com = new SqlCommand())
            {
                com.CommandText = "select DISTINCT JobNo from tbl_Quotation_two_Hdr where " + "JobNo like @Search + '%' AND isCompleted='1' AND (isCreateQuata='1' OR mnQuatation='1') AND IsDeleted='0'  ";
                //  com.CommandText = "select DISTINCT JobNo from tbl_Quotation_Dtl_Sales where " + "JobNo like @Search + '%' ";

                com.Parameters.AddWithValue("@Search", prefixText);
                com.Connection = con;
                con.Open();
                List<string> JobNo = new List<string>();
                using (SqlDataReader sdr = com.ExecuteReader())
                {
                    while (sdr.Read())
                    {
                        JobNo.Add(sdr["JobNo"].ToString());
                    }
                }
                con.Close();
                return JobNo;
            }
        }
    }

    private void Table_Calculation()
    {
        decimal Qty;
        if (string.IsNullOrEmpty(txt_quntity.Text))
        {
            Qty = 0;
        }
        else
        {
            var totalamt = Convert.ToDecimal(txt_quntity.Text.Trim()) * Convert.ToDecimal(txt_rate.Text.Trim());
            txt_total_amount.Text = totalamt.ToString();

        }
        decimal TaxAmt;
        if (string.IsNullOrEmpty(txt_tax.Text))
        {
            TaxAmt = 0;
        }
        else
        {
            decimal val1 = Convert.ToDecimal(txt_total_amount.Text);
            decimal val2 = Convert.ToDecimal(txt_tax.Text);

            TaxAmt = (val1 * val2 / 100);
        }

        //var TotalWithTax = Convert.ToDecimal(txt_total_amount.Text) + (TaxAmt);
        var TotalWithTax = Convert.ToDecimal(txt_total_amount.Text);
        txt_total_amount.Text = TotalWithTax.ToString();

        decimal DiscountAmt;
        if (string.IsNullOrEmpty(txt_discount.Text))
        {
            DiscountAmt = 0;
        }
        else
        {
            decimal val1 = Convert.ToDecimal(TotalWithTax);
            decimal val2 = Convert.ToDecimal(txt_discount.Text);

            DiscountAmt = (val1 * val2 / 100);
        }
        var GrossAmt = Convert.ToDecimal(TotalWithTax) - (DiscountAmt);
        txt_total_amount.Text = GrossAmt.ToString("##.00");
    }

    private void Grid_Calculation(GridViewRow row)
    {
        TextBox Tax = (TextBox)row.FindControl("txt_tax_grd");
        TextBox Quntity = (TextBox)row.FindControl("txt_quntity_grd");
        TextBox Rate = (TextBox)row.FindControl("txt_rate_grd");
        TextBox Discount = (TextBox)row.FindControl("txt_discount_grd");
        TextBox TotalAmount = (TextBox)row.FindControl("txt_total_amount_grd");

        decimal Qty;
        if (string.IsNullOrEmpty(Quntity.Text))
        {
            Qty = 0;

        }
        else
        {
            var totalamt = Convert.ToDecimal(Quntity.Text.Trim()) * Convert.ToDecimal(Rate.Text.Trim());
            TotalAmount.Text = totalamt.ToString();

        }

        decimal TaxAmt;
        if (string.IsNullOrEmpty(Tax.Text))
        {
            TaxAmt = 0;
        }
        else
        {
            decimal val1 = Convert.ToDecimal(TotalAmount.Text);
            decimal val2 = Convert.ToDecimal(Tax.Text);

            TaxAmt = (val1 * val2 / 100);
        }

        //txt_tax.Text = TaxAmt.ToString();
        //var TotalWithTax = Convert.ToDecimal(TotalAmount.Text) + (TaxAmt);
        var TotalWithTax = Convert.ToDecimal(TotalAmount.Text);
        TotalAmount.Text = TotalWithTax.ToString();

        decimal DiscountAmt;
        if (string.IsNullOrEmpty(Discount.Text))
        {
            DiscountAmt = 0;
        }
        else
        {
            decimal val1 = Convert.ToDecimal(TotalWithTax);
            decimal val2 = Convert.ToDecimal(Discount.Text);

            DiscountAmt = (val1 * val2 / 100);
        }
        var GrossAmt = Convert.ToDecimal(TotalWithTax) - (DiscountAmt);
        TotalAmount.Text = GrossAmt.ToString("##.00");
        ScriptManager.RegisterStartupScript(this, this.GetType(), "Success", "scrollToElement();", true);
    }

    //Quotation grid calculation

    private void QuotationGrid_Calculation(GridViewRow row)
    {
        TextBox Tax = (TextBox)row.FindControl("txt_tax_quogrd");
        TextBox Qty = (TextBox)row.FindControl("txt_quntity_Quogrd");
        TextBox Rate = (TextBox)row.FindControl("txt_rate_Quogrd");
        TextBox Discount = (TextBox)row.FindControl("txt_discount_Quogrd");
        TextBox FTotal = (TextBox)row.FindControl("txt_total_amount_Quogrd");

        decimal Qtty;
        if (string.IsNullOrEmpty(Qty.Text))
        {
            Qtty = 0;
        }
        else
        {
            var totalamt = Convert.ToDecimal(Qty.Text.Trim()) * Convert.ToDecimal(Rate.Text.Trim());
            FTotal.Text = totalamt.ToString();
        }

        decimal TaxAmt;
        if (string.IsNullOrEmpty(Tax.Text))
        {
            TaxAmt = 0;
        }
        else
        {
            decimal val1 = Convert.ToDecimal(FTotal.Text);
            decimal val2 = Convert.ToDecimal(Tax.Text);

            TaxAmt = (val1 * val2 / 100);
        }

        //txt_tax.Text = TaxAmt.ToString();
        //var TotalWithTax = Convert.ToDecimal(FTotal.Text) + (TaxAmt);
        var TotalWithTax = Convert.ToDecimal(FTotal.Text);
        FTotal.Text = TotalWithTax.ToString();

        decimal DiscountAmt;
        if (string.IsNullOrEmpty(Discount.Text))
        {
            DiscountAmt = 0;
        }
        else
        {
            decimal val1 = Convert.ToDecimal(TotalWithTax);
            decimal val2 = Convert.ToDecimal(Discount.Text);

            DiscountAmt = (val1 * val2 / 100);
        }
        var GrossAmt = Convert.ToDecimal(TotalWithTax) - (DiscountAmt);
        FTotal.Text = GrossAmt.ToString("##.00");
        ScriptManager.RegisterStartupScript(this, this.GetType(), "Success", "scrollToElement();", true);
    }

    protected void txt_rate_TextChanged(object sender, EventArgs e)
    {
        if (txt_quntity.Text == "")
        {
            //ScriptManager.RegisterStartupScript(this, this.GetType(), "Alert", "alert('Please fill Quntity !!!');", true);
            txt_tax.Text = "0";
            txt_discount.Text = "0";
            txt_tax.Text = "18";
        }
        else
        {
            Table_Calculation();
        }
    }

    protected void txt_quntity_TextChanged(object sender, EventArgs e)
    {
        Table_Calculation();
    }

    protected void txt_tax_TextChanged(object sender, EventArgs e)
    {
        Table_Calculation();
    }

    protected void txt_discount_TextChanged(object sender, EventArgs e)
    {
        Table_Calculation();
    }

    private void Show_Grid()
    {
        ViewState["RowNo"] = (int)ViewState["RowNo"] + 1;
        DataTable Dt = (DataTable)ViewState["CPO_Product"];
        Dt.Rows.Add(ViewState["RowNo"], txt_hsn.Text, txt_rate.Text, txt_unit.Text, txt_quntity.Text, txt_tax.Text, txt_discount.Text, txt_total_amount.Text);
        ViewState["CPO_Product"] = Dt;

        //txt_jobno.Text = string.Empty;

        txt_hsn.Text = string.Empty;
        txt_rate.Text = string.Empty;
        txt_unit.Text = string.Empty;
        txt_quntity.Text = string.Empty;
        txt_tax.Text = string.Empty;
        txt_discount.Text = string.Empty;
        txt_total_amount.Text = string.Empty;
        txtpoduct.Text = string.Empty;


        gvPurchaseRecord.DataSource = (DataTable)ViewState["CPO_Product"];
        gvPurchaseRecord.DataBind();
    }

    protected void btn_add_more_Click(object sender, EventArgs e)
    {
        if (txt_printdescription.Text == "" || txt_hsn.Text == "" || txt_rate.Text == "" || txt_quntity.Text == "" || txtpoduct.Text == "")
        {
            ScriptManager.RegisterStartupScript(this, this.GetType(), "Alert", "alert('Please fill Product Information  !!!');", true);
            //txt_quntity.Focus();
        }
        else
        {
            //Show_Grid();
            Show_Grid1();

            //    decimal grd_total;
            //    if (!string.IsNullOrEmpty(txt_total_amount.Text))
            //    {
            //        grd_total = 0;
            //    }
            //    else
            //    {
            //        decimal val1 = Convert.ToDecimal(txt_total.Text);
            //        //decimal val2 = Convert.ToDecimal(txt_sgst_amt.Text);
            //        //decimal val3 = Convert.ToDecimal(txt_cgst_amt.Text);
            //        //decimal val4 = Convert.ToDecimal(txt_igst_amt.Text);

            //        grd_total = (val1);

            //    }
            //    txt_grand_total.Text = grd_total.ToString();
            //    hfTotal.Value = txt_grand_total.Text;

            //    string isNegative = "";
            //    try
            //    {
            //        string number = hfTotal.Value;
            //        number = Convert.ToDouble(number).ToString();

            //        lbl_Amount_In_Word.Text = isNegative + ConvertToWords(number);
            //    }
            //    catch (Exception)
            //    {

            //        throw;
            //    }
        }

        //if (hdnPoProductTot.Value != "")
        //{
        //    decimal totaltax = 0, totalgrdtax = 0;
        //    decimal Total11177 = 0, Qty = 0, rate111111 = 0, totalrateqty = 0;
        //    foreach (GridViewRow g1 in gvPurchaseRecord.Rows)
        //    {
        //        string lbltotaltax = (g1.FindControl("lbl_tax_grd") as Label).Text;
        //        string lblrate = (g1.FindControl("lbl_rate_grd") as Label).Text;
        //        string lblqty = (g1.FindControl("lbl_quntity_grd") as Label).Text;
        //        totaltax = Convert.ToDecimal(lbltotaltax);

        //        rate111111 = Convert.ToDecimal(lblrate);
        //        Qty = Convert.ToDecimal(lblqty);
        //        Total11177 = ((Qty * rate111111) * totaltax) / 100;
        //        totalrateqty += Total11177;
        //    }
        //    totalgrdtax = totalrateqty + Convert.ToDecimal(taxhidden.Value);
        //    //if (txtstatecode.Text == "27 MAHARASHTRA")
        //    //{
        //    //    txt_cgst_amt.Text = Convert.ToDecimal(totalgrdtax / 2).ToString("##.00");
        //    //    txt_sgst_amt.Text = Convert.ToDecimal(totalgrdtax / 2).ToString("##.00");
        //    //    txt_igst_amt.Text = Convert.ToDecimal(00).ToString("##.00");
        //    //}
        //    //else
        //    //{
        //    //    txt_cgst_amt.Text = Convert.ToDecimal(00).ToString("##.00");
        //    //    txt_sgst_amt.Text = Convert.ToDecimal(00).ToString("##.00");
        //    //    txt_igst_amt.Text = Convert.ToDecimal(totalgrdtax).ToString("##.00");
        //    //}
        //}
        //else
        //{
        //    decimal totaltax = 0;
        //    decimal Total11177 = 0, Qty = 0, rate111111 = 0, totalrateqty = 0;
        //    foreach (GridViewRow g1 in gvPurchaseRecord.Rows)
        //    {
        //        string lbltotaltax = (g1.FindControl("lbl_tax_grd") as Label).Text;
        //        string lblrate = (g1.FindControl("lbl_rate_grd") as Label).Text;
        //        string lblqty = (g1.FindControl("lbl_quntity_grd") as Label).Text;
        //        totaltax = Convert.ToDecimal(lbltotaltax);

        //        rate111111 = Convert.ToDecimal(lblrate);
        //        Qty = Convert.ToDecimal(lblqty);
        //        Total11177 = ((Qty * rate111111) * totaltax) / 100;
        //        totalrateqty += Total11177;
        //    }
        //    if (txtstatecode.Text == "27 MAHARASHTRA")
        //    {
        //        txt_cgst_amt.Text = Convert.ToDecimal(totalrateqty / 2).ToString("##.00");
        //        txt_sgst_amt.Text = Convert.ToDecimal(totalrateqty / 2).ToString("##.00");
        //        txt_igst_amt.Text = Convert.ToDecimal(00).ToString("##.00");
        //    }
        //    else
        //    {
        //        txt_cgst_amt.Text = Convert.ToDecimal(00).ToString("##.00");
        //        txt_sgst_amt.Text = Convert.ToDecimal(00).ToString("##.00");
        //        txt_igst_amt.Text = Convert.ToDecimal(totalrateqty).ToString("##.00");
        //    }
        //}
    }

    private static String ones(String Number)
    {
        int _Number = Convert.ToInt32(Number);
        String name = "";
        switch (_Number)
        {

            case 1:
                name = "One";
                break;
            case 2:
                name = "Two";
                break;
            case 3:
                name = "Three";
                break;
            case 4:
                name = "Four";
                break;
            case 5:
                name = "Five";
                break;
            case 6:
                name = "Six";
                break;
            case 7:
                name = "Seven";
                break;
            case 8:
                name = "Eight";
                break;
            case 9:
                name = "Nine";
                break;
        }
        return name;
    }
    private static String tens(String Number)
    {
        int _Number = Convert.ToInt32(Number);
        String name = null;
        switch (_Number)
        {
            case 10:
                name = "Ten";
                break;
            case 11:
                name = "Eleven";
                break;
            case 12:
                name = "Twelve";
                break;
            case 13:
                name = "Thirteen";
                break;
            case 14:
                name = "Fourteen";
                break;
            case 15:
                name = "Fifteen";
                break;
            case 16:
                name = "Sixteen";
                break;
            case 17:
                name = "Seventeen";
                break;
            case 18:
                name = "Eighteen";
                break;
            case 19:
                name = "Nineteen";
                break;
            case 20:
                name = "Twenty";
                break;
            case 30:
                name = "Thirty";
                break;
            case 40:
                name = "Fourty";
                break;
            case 50:
                name = "Fifty";
                break;
            case 60:
                name = "Sixty";
                break;
            case 70:
                name = "Seventy";
                break;
            case 80:
                name = "Eighty";
                break;
            case 90:
                name = "Ninety";
                break;
            default:
                if (_Number > 0)
                {
                    name = tens(Number.Substring(0, 1) + "0") + " " + ones(Number.Substring(1));
                }
                break;
        }
        return name;
    }
    private static String ConvertWholeNumber(String Number)
    {
        string word = "";
        try
        {
            bool beginsZero = false;//tests for 0XX  
            bool isDone = false;//test if already translated  
            double dblAmt = (Convert.ToDouble(Number));
            //if ((dblAmt > 0) && number.StartsWith("0"))  
            if (dblAmt > 0)
            {//test for zero or digit zero in a nuemric  
                beginsZero = Number.StartsWith("0");

                int numDigits = Number.Length;
                int pos = 0;//store digit grouping  
                String place = "";//digit grouping name:hundres,thousand,etc...  
                switch (numDigits)
                {
                    case 1://ones' range  

                        word = ones(Number);
                        isDone = true;
                        break;
                    case 2://tens' range  
                        word = tens(Number);
                        isDone = true;
                        break;
                    case 3://hundreds' range  
                        pos = (numDigits % 3) + 1;
                        place = " Hundred ";
                        break;
                    case 4://thousands' range  
                    case 5:
                    case 6:
                        pos = (numDigits % 4) + 1;
                        place = " Thousand ";
                        break;
                    case 7://millions' range  
                    case 8:
                        pos = (numDigits % 6) + 1;
                        place = " Lac ";
                        break;
                    case 9:
                        pos = (numDigits % 8) + 1;
                        place = " Million ";
                        break;
                    case 10://Billions's range  
                    case 11:
                    case 12:

                        pos = (numDigits % 10) + 1;
                        place = " Billion ";
                        break;
                    //add extra case options for anything above Billion...  
                    default:
                        isDone = true;
                        break;
                }
                if (!isDone)
                {//if transalation is not done, continue...(Recursion comes in now!!)  
                    if (Number.Substring(0, pos) != "0" && Number.Substring(pos) != "0")
                    {
                        try
                        {
                            word = ConvertWholeNumber(Number.Substring(0, pos)) + place + ConvertWholeNumber(Number.Substring(pos));
                        }
                        catch { }
                    }
                    else
                    {
                        word = ConvertWholeNumber(Number.Substring(0, pos)) + ConvertWholeNumber(Number.Substring(pos));
                    }

                    //check for trailing zeros  
                    //if (beginsZero) word = " and " + word.Trim();  
                }
                //ignore digit grouping names  
                if (word.Trim().Equals(place.Trim())) word = "";
            }
        }
        catch { }
        return word.Trim();
    }
    private static String ConvertToWords(String numb)
    {
        String val = "", wholeNo = numb, points = "", andStr = "", pointStr = "";
        String endStr = "Only";
        try
        {
            int decimalPlace = numb.IndexOf(".");
            if (decimalPlace > 0)
            {
                wholeNo = numb.Substring(0, decimalPlace);
                points = numb.Substring(decimalPlace + 1);
                if (Convert.ToInt32(points) > 0)
                {
                    andStr = "and";// just to separate whole numbers from points/cents  
                    endStr = "Paisa " + endStr;//Cents  
                    pointStr = ConvertDecimals(points);
                }
            }
            val = String.Format("{0} {1}{2} {3}", ConvertWholeNumber(wholeNo).Trim(), andStr, pointStr, endStr);
        }
        catch { }
        return val;
    }
    private static String ConvertDecimals(String number)
    {
        String cd = "", digit = "", engOne = "";
        for (int i = 0; i < number.Length; i++)
        {
            digit = number[i].ToString();
            if (digit.Equals("0"))
            {
                engOne = "Zero";
            }
            else
            {
                engOne = ones(digit);
            }
            cd += " " + engOne;
        }
        return cd;
    }

    private decimal Total;
    decimal Alltotal;
    protected void gvPurchaseRecord_RowDataBound(object sender, GridViewRowEventArgs e)
    {
        try
        {
            if (e.Row.RowType == DataControlRowType.DataRow)
            {
                //cast the current row to a datarowview
                DataRowView row = e.Row.DataItem as DataRowView;
                Total += Convert.ToDecimal(DataBinder.Eval(e.Row.DataItem, "Total_Amount"));   //Total_Amount issu database filed
                txt_total.Text = Total.ToString("##.00");
                //hdnPoProductTot.Value = TTotal.ToString();
                if (hdnPoProductTot.Value != "")
                {
                    Alltotal = Convert.ToDecimal(hdnPoProductTot.Value) + Total;
                }
                else
                {
                    Alltotal = Total;
                }
                txt_total.Text = Alltotal.ToString("##.00");

                //var GSTamt = (txt_total.Text * 100 / 2);

                var GSTamt = (Alltotal * 9 / 100);

                var IGSTamt = (Alltotal * 18 / 100);

                decimal grd_total;
                if (!string.IsNullOrEmpty(txt_total_amount.Text))
                {
                    grd_total = 0;
                }
                else
                {
                    decimal val1 = Convert.ToDecimal(txt_total.Text);
                    //decimal val2 = Convert.ToDecimal(txt_sgst_amt.Text);
                    //decimal val3 = Convert.ToDecimal(txt_cgst_amt.Text);
                    decimal CGST = Convert.ToDecimal(GSTamt);
                    decimal SGST = Convert.ToDecimal(GSTamt);

                   


                    grd_total = (val1 + CGST + SGST);

                }

                //new code 



                if (txtstatecode.Text == "27 MAHARASHTRA")
                {
                    txt_sgst_amt.Text = GSTamt.ToString();
                    txt_cgst_amt.Text = GSTamt.ToString();
                    txt_igst_amt.Text = "0";
                }
                else
                {
                    txt_sgst_amt.Text = "0";
                    txt_cgst_amt.Text = "0";
                    txt_igst_amt.Text = IGSTamt.ToString();
                }


                txt_grand_total.Text = grd_total.ToString();
                hfTotal.Value = txt_grand_total.Text;

                string isNegative = "";
                try
                {
                    //string number = hfTotal.Value;
                    string number = txt_grand_total.Text;
                    number = Convert.ToDouble(number).ToString();

                    lbl_Amount_In_Word.Text = isNegative + ConvertToWords(number);
                }
                catch (Exception)
                {
                    throw;
                }

                //decimal Cgst_Total_Amt;
                //if (string.IsNullOrEmpty(txt_total.Text))
                //{
                //    Cgst_Total_Amt = 0;

                //}
                //else
                //{
                //    decimal val1 = Convert.ToDecimal(txt_total.Text);

                //    Cgst_Total_Amt = (val1 * 9 / 100);
                //}
                //txt_cgst_amt.Text = Cgst_Total_Amt.ToString("##.00");

                //decimal Sgst_Toatl_Amt;
                //if (string.IsNullOrEmpty(txt_total.Text))
                //{
                //    Sgst_Toatl_Amt = 0;

                //}
                //else
                //{
                //    decimal val1 = Convert.ToDecimal(txt_total.Text);

                //    Sgst_Toatl_Amt = (val1 * 9 / 100);
                //}
                //txt_sgst_amt.Text = Sgst_Toatl_Amt.ToString("##.00");

                //decimal Igst_Total_Amt;
                //if (string.IsNullOrEmpty(txt_total.Text))
                //{
                //    Igst_Total_Amt = 0;

                //}
                //else
                //{
                //    decimal val1 = Convert.ToDecimal(txt_total.Text);

                //    Igst_Total_Amt = (val1 * 0 / 100);
                //}
                //txt_igst_amt.Text = "0";//Igst_Total_Amt.ToString("##.00");


                //var GrossGrandTotal = Total + Cgst_Total_Amt + Sgst_Toatl_Amt + Igst_Total_Amt;
                //txt_grand_total.Text = GrossGrandTotal.ToString("##.00");
                //hfTotal.Value = txt_grand_total.Text;



                //string isNegative = "";
                //try
                //{
                //    string number = hfTotal.Value;
                //    number = Convert.ToDouble(number).ToString();

                //    lbl_Amount_In_Word.Text = isNegative + ConvertToWords(number);
                //}
                //catch (Exception)
                //{

                //    throw;
                //}
            }
        }
        catch (Exception ex)
        {
            throw ex;
        }
    }

    protected void gvPurchaseRecord_RowEditing(object sender, GridViewEditEventArgs e)
    {
        gvPurchaseRecord.EditIndex = e.NewEditIndex;
        gvPurchaseRecord.DataSource = (DataTable)ViewState["CPO_Product"];
        gvPurchaseRecord.DataBind();
        ScriptManager.RegisterStartupScript(this, this.GetType(), "Success", "scrollToElement();", true);
    }

    protected void gv_update_Click(object sender, EventArgs e)
    {
        GridViewRow row = (sender as LinkButton).NamingContainer as GridViewRow;

        //  string JobNo = ((TextBox)row.FindControl("txt_Jobno_grdd")).Text;
        string Discription = ((TextBox)row.FindControl("txt_printdescription_grd")).Text;
        string HSN = ((TextBox)row.FindControl("txt_hsn_grdd")).Text;
        string Rate = ((TextBox)row.FindControl("txt_rate_grd")).Text;
        string Unit = ((TextBox)row.FindControl("txt_unit_grdd")).Text;
        string Quntity = ((TextBox)row.FindControl("txt_quntity_grd")).Text;
        string Tax = ((TextBox)row.FindControl("txt_tax_grd")).Text;
        string Discount = ((TextBox)row.FindControl("txt_discount_grd")).Text;
        string TotalAmount = ((TextBox)row.FindControl("txt_total_amount_grd")).Text;

        DataTable Dt = ViewState["CPO_Product"] as DataTable;

        //  Dt.Rows[row.RowIndex]["JobNo"] = JobNo;
        Dt.Rows[row.RowIndex]["PrintDescription"] = Discription;
        Dt.Rows[row.RowIndex]["HSN/SAC"] = HSN;
        Dt.Rows[row.RowIndex]["Rate"] = Rate;
        Dt.Rows[row.RowIndex]["Unit"] = Unit;
        Dt.Rows[row.RowIndex]["Quntity"] = Quntity;
        Dt.Rows[row.RowIndex]["Tax"] = Tax;
        Dt.Rows[row.RowIndex]["Discount"] = Discount;
        Dt.Rows[row.RowIndex]["Total_Amount"] = TotalAmount;

        Dt.AcceptChanges();

        ViewState["CPO_Product"] = Dt;
        gvPurchaseRecord.EditIndex = -1;

        gvPurchaseRecord.DataSource = (DataTable)ViewState["CPO_Product"];
        gvPurchaseRecord.DataBind();

        decimal grd_total;
        if (!string.IsNullOrEmpty(txt_total_amount.Text))
        {
            grd_total = 0;
        }
        else
        {
            decimal val1 = Convert.ToDecimal(txt_total.Text);
            //decimal val2 = Convert.ToDecimal(txt_sgst_amt.Text);
            //decimal val3 = Convert.ToDecimal(txt_cgst_amt.Text);
            //decimal val4 = Convert.ToDecimal(txt_igst_amt.Text);
            //decimal val5 = Convert.ToDecimal(txt_round_off.Text);

            grd_total = (val1);

            //var grd = grd_total - val5;
        }
        txt_grand_total.Text = grd_total.ToString();
        hfTotal.Value = txt_grand_total.Text;

        string isNegative = "";
        try
        {
            //string number = hfTotal.Value;
            //number = Convert.ToDouble(number).ToString();

            //lbl_Amount_In_Word.Text = isNegative + ConvertToWords(number);

            var GSTAmt = grd_total * 18 / 100;

            var GrandTotal = GSTAmt + grd_total;
            txt_grand_total.Text = GrandTotal.ToString();

            string number = txt_grand_total.Text;
            //string number = GrandTotal.ToString();
            number = Convert.ToDouble(number).ToString();

            lbl_Amount_In_Word.Text = isNegative + ConvertToWords(number);
        }
        catch (Exception)
        {

            throw;
        }
        if (hdnPoProductTot.Value != "")
        {
            decimal totaltax = 0, totalgrdtax = 0;
            decimal Total11177 = 0, Qty = 0, rate111111 = 0, totalrateqty = 0;
            foreach (GridViewRow g1 in gvPurchaseRecord.Rows)
            {
                string lbltotaltax = (g1.FindControl("lbl_tax_grd") as Label).Text;
                string lblrate = (g1.FindControl("lbl_rate_grd") as Label).Text;
                string lblqty = (g1.FindControl("lbl_quntity_grd") as Label).Text;
                totaltax = Convert.ToDecimal(lbltotaltax);

                rate111111 = Convert.ToDecimal(lblrate);
                Qty = Convert.ToDecimal(lblqty);
                Total11177 = ((Qty * rate111111) * totaltax) / 100;
                totalrateqty += Total11177;
            }
            //totalgrdtax = totalrateqty + Convert.ToDecimal(taxhidden.Value);
            //if (txtstatecode.Text == "27 MAHARASHTRA")
            //{
            //    txt_cgst_amt.Text = Convert.ToDecimal(totalgrdtax / 2).ToString("##.00");
            //    txt_sgst_amt.Text = Convert.ToDecimal(totalgrdtax / 2).ToString("##.00");
            //    txt_igst_amt.Text = Convert.ToDecimal(00).ToString("##.00");
            //}
            //else
            //{
            //    txt_cgst_amt.Text = Convert.ToDecimal(00).ToString("##.00");
            //    txt_sgst_amt.Text = Convert.ToDecimal(00).ToString("##.00");
            //    txt_igst_amt.Text = Convert.ToDecimal(totalgrdtax).ToString("##.00");
            //}
        }
        else
        {
            decimal totaltax = 0;
            decimal Total11177 = 0, Qty = 0, rate111111 = 0, totalrateqty = 0;
            foreach (GridViewRow g1 in gvPurchaseRecord.Rows)
            {
                string lbltotaltax = (g1.FindControl("lbl_tax_grd") as Label).Text;
                string lblrate = (g1.FindControl("lbl_rate_grd") as Label).Text;
                string lblqty = (g1.FindControl("lbl_quntity_grd") as Label).Text;
                totaltax = Convert.ToDecimal(lbltotaltax);

                rate111111 = Convert.ToDecimal(lblrate);
                Qty = Convert.ToDecimal(lblqty);
                Total11177 = ((Qty * rate111111) * totaltax) / 100;
                totalrateqty += Total11177;
            }
            if (txtstatecode.Text == "27 MAHARASHTRA")
            {
                txt_cgst_amt.Text = Convert.ToDecimal(totalrateqty / 2).ToString("##.00");
                txt_sgst_amt.Text = Convert.ToDecimal(totalrateqty / 2).ToString("##.00");
                txt_igst_amt.Text = Convert.ToDecimal(00).ToString("##.00");
            }
            else
            {
                txt_cgst_amt.Text = Convert.ToDecimal(00).ToString("##.00");
                txt_sgst_amt.Text = Convert.ToDecimal(00).ToString("##.00");
                txt_igst_amt.Text = Convert.ToDecimal(totalrateqty).ToString("##.00");
            }
        }

        ScriptManager.RegisterStartupScript(this, this.GetType(), "Success", "scrollToElement();", true);
    }

    protected void gv_cancel_Click(object sender, EventArgs e)
    {
        GridViewRow row = (sender as LinkButton).NamingContainer as GridViewRow;

        string Tax = ((TextBox)row.FindControl("txt_tax_grd")).Text;
        string Quntity = ((TextBox)row.FindControl("txt_quntity_grd")).Text;
        string Rate = ((TextBox)row.FindControl("txt_rate_grd")).Text;
        string Discount = ((TextBox)row.FindControl("txt_discount_grd")).Text;
        string TotalAmount = ((TextBox)row.FindControl("txt_total_amount_grd")).Text;

        DataTable Dt = ViewState["CPO_Product"] as DataTable;
        gvPurchaseRecord.EditIndex = -1;
        //Show_Grid();
        //gvPurchaseRecord.DataBind();
        ViewState["CPO_Product"] = Dt;
        gvPurchaseRecord.EditIndex = -1;

        gvPurchaseRecord.DataSource = (DataTable)ViewState["CPO_Product"];
        gvPurchaseRecord.DataBind();
        ScriptManager.RegisterStartupScript(this, this.GetType(), "Success", "scrollToElement();", true);
    }

    protected void txt_rate_grd_TextChanged(object sender, EventArgs e)
    {
        GridViewRow row = (sender as TextBox).NamingContainer as GridViewRow;

        Grid_Calculation(row);
    }

    protected void txt_quntity_grd_TextChanged(object sender, EventArgs e)
    {
        GridViewRow row = (sender as TextBox).NamingContainer as GridViewRow;

        Grid_Calculation(row);
    }

    protected void txt_tax_grd_TextChanged(object sender, EventArgs e)
    {
        GridViewRow row = (sender as TextBox).NamingContainer as GridViewRow;

        Grid_Calculation(row);
    }

    protected void txt_discount_grd_TextChanged(object sender, EventArgs e)
    {
        GridViewRow row = (sender as TextBox).NamingContainer as GridViewRow;

        Grid_Calculation(row);
    }

    protected void txt_round_off_TextChanged(object sender, EventArgs e)
    {
        //txt_round_off.Text = "0";
        decimal Round_Off;
        if (txt_round_off.Text == "0")
        {
            Round_Off = 0;
            //decimal Cgst_Total_Amt;
            //if (string.IsNullOrEmpty(txt_total.Text))
            //{
            //    Cgst_Total_Amt = 0;

            //}
            //else
            //{
            //    decimal val1 = Convert.ToDecimal(txt_total.Text);

            //    Cgst_Total_Amt = (val1 * 9 / 100);
            //}
            //txt_cgst_amt.Text = Cgst_Total_Amt.ToString("##.00");

            //decimal Sgst_Toatl_Amt;
            //if (string.IsNullOrEmpty(txt_total.Text))
            //{
            //    Sgst_Toatl_Amt = 0;

            //}
            //else
            //{
            //    decimal val1 = Convert.ToDecimal(txt_total.Text);

            //    Sgst_Toatl_Amt = (val1 * 9 / 100);
            //}
            //txt_sgst_amt.Text = Sgst_Toatl_Amt.ToString("##.00");

            //decimal Igst_Total_Amt;
            //if (string.IsNullOrEmpty(txt_total.Text))
            //{
            //    Igst_Total_Amt = 0;

            //}
            //else
            //{
            //    decimal val1 = Convert.ToDecimal(txt_total.Text);

            //    Igst_Total_Amt = (val1 * 0 / 100);
            //}
            //txt_igst_amt.Text = "0";//Igst_Total_Amt.ToString("##.00");

            decimal subTotal = Convert.ToDecimal(txt_total.Text);
            decimal GrossGrandTotal = subTotal;
            txt_grand_total.Text = GrossGrandTotal.ToString("##.00");
            hfTotal.Value = txt_grand_total.Text;

            string isNegative = "";
            try
            {
                //string number = hfTotal.Value;
                //number = Convert.ToDouble(number).ToString();

                //lbl_Amount_In_Word.Text = isNegative + ConvertToWords(number);

                string number = txt_grand_total.Text;
                number = Convert.ToDouble(number).ToString();

                lbl_Amount_In_Word.Text = isNegative + ConvertToWords(number);
            }
            catch (Exception)
            {
                throw;
            }
        }
        else
        {
            decimal val1 = Convert.ToDecimal(txt_round_off.Text);
            decimal val2 = Convert.ToDecimal(txt_grand_total.Text);
            Round_Off = (val2 - val1);
            txt_grand_total.Text = Round_Off.ToString("##.00");
            hfTotal.Value = txt_grand_total.Text;

            string isNegative = "";
            try
            {
                //string number = hfTotal.Value;
                //number = Convert.ToDouble(number).ToString();

                //lbl_Amount_In_Word.Text = isNegative + ConvertToWords(number);

                string number = txt_grand_total.Text;
                number = Convert.ToDouble(number).ToString();

                lbl_Amount_In_Word.Text = isNegative + ConvertToWords(number);
            }
            catch (Exception)
            {
                throw;
            }
        }
    }

    private void Save_Record()
    {
        con.Open();
        int id;
        string CretedBy = Session["adminname"].ToString();
        string Path = null;
        if (btn_save.Text == "Update")
        {
            SqlCommand Cmd = new SqlCommand("UPDATE CustomerPO_Hdr_Both SET Quotationno=@Quotationno,CustomerName=@CustomerName,SubCustomer=@SubCustomer,Pono=@Pono,PoDate=@PoDate,RefNo=@RefNo,Mobileno=@Mobileno,KindAtt=@KindAtt,ShippingAddress=@ShippingAddress,DeliveryAddress=@DeliveryAddress,GstNo=@GstNo,Cgst=@Cgst,Sgst=@Sgst,Igst=@Igst,AllTotalPrice=@AllTotalPrice,RoundOff=@RoundOff,GrandTotal=@GrandTotal,TotalInWord=@TotalInWord,Is_Deleted=@Is_Deleted,PayTerm=@PayTerm,Imagepath=@Imagepath,AgainstBy=@AgainstBy,Term_Condition_1=@Term_Condition_1,Term_Condition_2=@Term_Condition_2,Term_Condition_3=@Term_Condition_3,Term_Condition_4=@Term_Condition_4,Term_Condition_5=@Term_Condition_5,Term_Condition_6=@Term_Condition_6,statecode=@statecode,UpdatedBy=@UpdatedBy,UpdatedOn=@UpdatedOn WHERE Id='" + hdnID.Value + "'", con);
            Cmd.Parameters.AddWithValue("@Quotationno", ddlquotationno.SelectedItem.Text);
            Cmd.Parameters.AddWithValue("@CustomerName", txt_Customer_name.Text);
            Cmd.Parameters.AddWithValue("@SubCustomer", txtsubcust.Text);
            Cmd.Parameters.AddWithValue("@JobNo", txt_job_no.Text);
            Cmd.Parameters.AddWithValue("@Pono", txt_po_no.Text);
            Cmd.Parameters.AddWithValue("@PoDate", txt_po_date.Text);
            Cmd.Parameters.AddWithValue("@RefNo", txt_ref_no.Text);
            Cmd.Parameters.AddWithValue("@Mobileno", txt_mobile_no.Text);
            if (txt_kind_att.Text == "")
            {
                Cmd.Parameters.AddWithValue("@KindAtt", "NA");
            }
            else
            {
                Cmd.Parameters.AddWithValue("@KindAtt", txt_kind_att.SelectedItem.Text);
            }

            Cmd.Parameters.AddWithValue("@ShippingAddress", txtShippingAddr.Text);
            Cmd.Parameters.AddWithValue("@DeliveryAddress", txt_delivery_address.Text);
            Cmd.Parameters.AddWithValue("@Is_Deleted", '0');
            Cmd.Parameters.AddWithValue("@GstNo", txt_gst_no.Text);
            Cmd.Parameters.AddWithValue("@PayTerm", txt_pay_term.Text);
            Cmd.Parameters.AddWithValue("@statecode", txtstatecode.Text);
            Cmd.Parameters.AddWithValue("@Cgst", txt_cgst_amt.Text);
            Cmd.Parameters.AddWithValue("@Sgst", txt_sgst_amt.Text);
            Cmd.Parameters.AddWithValue("@Igst", txt_igst_amt.Text);
            Cmd.Parameters.AddWithValue("@AllTotalPrice", txt_total.Text);
            Cmd.Parameters.AddWithValue("@RoundOff", txt_round_off.Text);
            Cmd.Parameters.AddWithValue("@GrandTotal", txt_grand_total.Text);
            Cmd.Parameters.AddWithValue("@TotalInWord", lbl_Amount_In_Word.Text);
            Cmd.Parameters.AddWithValue("@Term_Condition_1", txt_term_1.Text + "-" + txt_condition_1.Text);
            Cmd.Parameters.AddWithValue("@Term_Condition_2", txt_term_2.Text + "-" + txt_condition_2.Text);
            Cmd.Parameters.AddWithValue("@Term_Condition_3", txt_term_3.Text + "-" + txt_condition_3.Text);
            Cmd.Parameters.AddWithValue("@Term_Condition_4", txt_term_4.Text + "-" + txt_condition_4.Text);
            Cmd.Parameters.AddWithValue("@Term_Condition_5", txt_term_5.Text + "-" + txt_condition_5.Text);
            Cmd.Parameters.AddWithValue("@Term_Condition_6", txt_term_6.Text + "-" + txt_condition_6.Text);
            Cmd.Parameters.AddWithValue("@ServiceType", ddlservicetype.SelectedItem.Text);
            Cmd.Parameters.AddWithValue("@Type", ddltype.SelectedItem.Text);
            Cmd.Parameters.AddWithValue("@AgainstBy", ddlagainstby.SelectedItem.Text);

            if (FileUpload.HasFile)
            {
                var Filenamenew = FileUpload.FileName;
                string codenew = Guid.NewGuid().ToString();
                Path = Server.MapPath("~/Attachpo/") + codenew + "_" + Filenamenew;
                FileUpload.SaveAs(Path);
                Cmd.Parameters.AddWithValue("@Imagepath", "~/Attachpo/" + codenew + "_" + Filenamenew);
            }
            else
            {
                Cmd.Parameters.AddWithValue("@Imagepath", lblPath.Text);
            }

            Cmd.Parameters.AddWithValue("@UpdatedBy", CretedBy);
            Cmd.Parameters.AddWithValue("@UpdatedOn", DateTime.Now);
            Cmd.ExecuteNonQuery();

            SqlCommand cmddelete = new SqlCommand("DELETE FROM CustomerPO_Dtls_Both WHERE PurchaseId=@PurchaseId", con);
            cmddelete.Parameters.AddWithValue("@PurchaseId", hdnID.Value);

            cmddelete.ExecuteNonQuery();

            foreach (GridViewRow g2 in gvPurchaseRecord.Rows)
            {
                Cmd.Parameters.AddWithValue("@Quotationno", ddlquotationno.SelectedItem.Text);
                //string JobNO = (g2.FindControl("txt_Jobno_grd") as Label).Text;
                // string JobNO = (g2.FindControl("lblJob") as Label).Text; 
                // string MateName = (g2.FindControl("txt_printdescription_grd") as Label).Text;
                string HSN = (g2.FindControl("txt_hsn_grd") as Label).Text;
                string Tax = (g2.FindControl("lbl_tax_grd") as Label).Text;
                string Quntity = (g2.FindControl("lbl_quntity_grd") as Label).Text;
                string Unit = (g2.FindControl("txt_unit_grd") as Label).Text;
                string Rate = (g2.FindControl("lbl_rate_grd") as Label).Text;
                string Discount = (g2.FindControl("lbl_discount_grd") as Label).Text;
                string Total_Amount = (g2.FindControl("lbl_total_amount_grd") as Label).Text;
                string MateName = (g2.FindControl("lblproduct") as Label).Text;
                string PrintDescription = (g2.FindControl("lblprintdescription") as Label).Text;
                SqlCommand Cmd1 = new SqlCommand("INSERT INTO CustomerPO_Dtls_Both (PurchaseId,Hsn_Sac,TaxPercenteage,Quantity,Unit,Rate,DiscountPercentage,Total, PrintDescription, MateName,Quotationno) " + "VALUES('" + hdnID.Value + "','" + HSN + "','" + Tax + "','" + Quntity + "','" + Unit + "','" + Rate + "','" + Discount + "','" + Total_Amount + "','" + PrintDescription + "', '" + MateName + "', '" + ddlquotationno.SelectedItem.Text + "')", con);

                Cmd1.ExecuteNonQuery();
            }

            SqlDataAdapter Sda = new SqlDataAdapter("SELECT * FROM tblCustomerPOMail where pono='" + txt_po_no.Text + "' ", con);
            DataTable DTMAIL = new DataTable();
            Sda.Fill(DTMAIL);

            foreach (GridViewRow g1 in Grd_MAIL.Rows)
            {
                string MAIL = (g1.FindControl("lblmultMail") as Label).Text;
                string Designation = (g1.FindControl("lbldesignation") as Label).Text;
                SqlCommand cmdtable = new SqlCommand("UPDATE tblCustomerPOMail SET Email=@Email, UpdatedBy=@UpdatedBy, UpdatedOn=@UpdatedOn,pono=@pono,designation=@designation WHERE Email=@Email AND pono=@pono", con);
                //cmdtable.Parameters.AddWithValue("@JobNo", txt_job_no.Text);
                cmdtable.Parameters.AddWithValue("@Email", MAIL);
                cmdtable.Parameters.AddWithValue("@pono", txt_po_no.Text);
                cmdtable.Parameters.AddWithValue("@UpdatedBy", CretedBy);
                cmdtable.Parameters.AddWithValue("@UpdatedOn", DateTime.Today);
                cmdtable.Parameters.AddWithValue("@designation", Designation);
                cmdtable.ExecuteNonQuery();
            }
            ClientScript.RegisterStartupScript(this.GetType(), "alert", "HideLabel('Data Updated Sucessfully');", true);
        }

        else
        {
            try
            {
                SqlCommand Cmd = new SqlCommand("SP_CustomerPO_Both", con);
                Cmd.CommandType = CommandType.StoredProcedure;
                //  Cmd.Parameters.AddWithValue("@JobNo", txt_job_no.Text);
                Cmd.Parameters.AddWithValue("@Quotationno", ddlquotationno.SelectedItem.Text);
                Cmd.Parameters.AddWithValue("@CustomerName", txt_Customer_name.Text);
                Cmd.Parameters.AddWithValue("@SubCustomer", txtsubcust.Text);
                Cmd.Parameters.AddWithValue("@Pono", txt_po_no.Text);
                Cmd.Parameters.AddWithValue("@PoDate", txt_po_date.Text);
                Cmd.Parameters.AddWithValue("@RefNo", txt_ref_no.Text);
                Cmd.Parameters.AddWithValue("@Mobileno", txt_mobile_no.Text);
                if (txt_kind_att.Text == "")
                {
                    Cmd.Parameters.AddWithValue("@KindAtt", "NA");
                }
                else
                {
                    Cmd.Parameters.AddWithValue("@KindAtt", txt_kind_att.SelectedItem.Text);
                }
                Cmd.Parameters.AddWithValue("@ShippingAddress", txtShippingAddr.Text);
                Cmd.Parameters.AddWithValue("@DeliveryAddress", txt_delivery_address.Text);
                Cmd.Parameters.AddWithValue("@GstNo", txt_gst_no.Text);
                Cmd.Parameters.AddWithValue("@statecode", txtstatecode.Text);
                Cmd.Parameters.AddWithValue("@PayTerm", txt_pay_term.Text);
                Cmd.Parameters.AddWithValue("@Cgst", txt_cgst_amt.Text);
                Cmd.Parameters.AddWithValue("@Sgst", txt_sgst_amt.Text);
                Cmd.Parameters.AddWithValue("@Igst", txt_igst_amt.Text);
                Cmd.Parameters.AddWithValue("@AllTotalPrice", txt_total.Text);
                Cmd.Parameters.AddWithValue("@TotalInWord", lbl_Amount_In_Word.Text);
                Cmd.Parameters.AddWithValue("@RoundOff", txt_round_off.Text);
                Cmd.Parameters.AddWithValue("@GrandTotal", txt_grand_total.Text);
                Cmd.Parameters.AddWithValue("@Term_Condition_1", txt_term_1.Text + "-" + txt_condition_1.Text);
                Cmd.Parameters.AddWithValue("@Term_Condition_2", txt_term_2.Text + "-" + txt_condition_2.Text);
                Cmd.Parameters.AddWithValue("@Term_Condition_3", txt_term_3.Text + "-" + txt_condition_3.Text);
                Cmd.Parameters.AddWithValue("@Term_Condition_4", txt_term_4.Text + "-" + txt_condition_4.Text);
                Cmd.Parameters.AddWithValue("@Term_Condition_5", txt_term_5.Text + "-" + txt_condition_5.Text);
                Cmd.Parameters.AddWithValue("@Term_Condition_6", txt_term_6.Text + "-" + txt_condition_6.Text);
                Cmd.Parameters.AddWithValue("@ServiceType", ddlservicetype.SelectedItem.Text);
                Cmd.Parameters.AddWithValue("@Type", ddltype.SelectedItem.Text);
                Cmd.Parameters.AddWithValue("@AgainstBy", ddlagainstby.SelectedItem.Text);

                if (FileUpload.HasFile)
                {
                    var Filenamenew = FileUpload.FileName;
                    string codenew = Guid.NewGuid().ToString();
                    Path = Server.MapPath("~/Attachpo/") + codenew + "_" + Filenamenew;
                    FileUpload.SaveAs(Path);
                    Cmd.Parameters.AddWithValue("@Imagepath", "~/Attachpo/" + codenew + "_" + Filenamenew);
                }

                Cmd.Parameters.AddWithValue("@Is_Deleted", '0');
                Cmd.Parameters.AddWithValue("@CreatedBy", CretedBy);
                Cmd.Parameters.AddWithValue("@CreatedOn", DateTime.Now);
                Cmd.Parameters.Add("@purchase_id", SqlDbType.Int).Direction = ParameterDirection.Output;
                Cmd.ExecuteNonQuery();

                id = Convert.ToInt32(Cmd.Parameters["@purchase_id"].Value);

                foreach (GridViewRow g1 in gvPurchaseRecord.Rows)
                {

                    string HSN = (g1.FindControl("txt_hsn_grd") as Label).Text;
                    string Tax = (g1.FindControl("lbl_tax_grd") as Label).Text;
                    string Quntity = (g1.FindControl("lbl_quntity_grd") as Label).Text;
                    string Unit = (g1.FindControl("txt_unit_grd") as Label).Text;
                    string Rate = (g1.FindControl("lbl_rate_grd") as Label).Text;
                    string Discount = (g1.FindControl("lbl_discount_grd") as Label).Text;
                    string Total_Amount = (g1.FindControl("lbl_total_amount_grd") as Label).Text;
                    string MateName = (g1.FindControl("lblproduct") as Label).Text;
                    string PrintDescription = (g1.FindControl("lblprintdescription") as Label).Text;
                    Cmd.Parameters.AddWithValue("@Quotationno", ddlquotationno.SelectedItem.Text);

                    SqlCommand Cmd1 = new SqlCommand("INSERT INTO CustomerPO_Dtls_Both (PurchaseId,Hsn_Sac,TaxPercenteage,Quantity,Unit,Rate,DiscountPercentage,Total,PrintDescription,MateName,Quotationno) " +
                        "VALUES('" + id + "','" + HSN + "','" + Tax + "','" + Quntity + "','" + Unit + "','" + Rate + "','" + Discount + "','" + Total_Amount + "','" + MateName + "' , '" + PrintDescription + "', '" + ddlquotationno.SelectedItem.Text + "')", con);

                    Cmd1.ExecuteNonQuery();
                }
                foreach (GridViewRow g1 in quatationgrid.Rows)
                {
                    // string JobNo = (g1.FindControl("LblJobNo") as Label).Text;
                    // string Discription = (g1.FindControl("txt_discription_grd") as Label).Text;
                    string HSN = (g1.FindControl("txt_hsn_grd") as Label).Text;
                    string Tax = (g1.FindControl("lbl_tax_grd") as Label).Text;
                    string Quntity = (g1.FindControl("lbl_quntity_grd") as Label).Text;
                    string Unit = (g1.FindControl("txt_unit_grd") as Label).Text;
                    string Rate = (g1.FindControl("lbl_rate_grd") as Label).Text;
                    string Discount = (g1.FindControl("lbl_discount_grd") as Label).Text;
                    string MateName = (g1.FindControl("lblproduct") as Label).Text;
                    string PrintDescription = (g1.FindControl("Lblprintdescription_grd") as Label).Text;
                    string Total_Amount = (g1.FindControl("lbl_total_amount_grd") as Label).Text;
                    Cmd.Parameters.AddWithValue("@Quotationno", ddlquotationno.SelectedItem.Text);

                    SqlCommand Cmd1 = new SqlCommand("INSERT INTO CustomerPO_Dtls_Both (PurchaseId,Hsn_Sac,TaxPercenteage,Quantity,Unit,Rate,DiscountPercentage,Total,MateName,PrintDescription,Quotationno) " +
                         "VALUES('" + id + "','" + HSN + "','" + Tax + "','" + Quntity + "','" + Unit + "','" + Rate + "','" + Discount + "','" + Total_Amount + "','" + MateName + "' ,'" + PrintDescription + "','" + ddlquotationno.SelectedItem.Text + "')", con);
                    Cmd1.ExecuteNonQuery();
                }

                foreach (GridViewRow g1 in Grd_MAIL.Rows)
                {
                    string MAIL = (g1.FindControl("lblmultMail") as Label).Text;
                    string Designation = (g1.FindControl("lbldesignation") as Label).Text;
                    SqlCommand cmdtable = new SqlCommand("insert into tblCustomerPOMail(QuotationNo,Email,CreatedBy,CreatedOn,pono,designation) values(@QuotationNo,@Email,@CreatedBy,@CreatedOn,@pono,@designation)", con);
                    //  cmdtable.Parameters.AddWithValue("@JobNo", txt_job_no.Text);   // new change 
                    cmdtable.Parameters.AddWithValue("@QuotationNo", ddlquotationno.SelectedItem.Text);   // new change 
                    cmdtable.Parameters.AddWithValue("@Email", MAIL);
                    cmdtable.Parameters.AddWithValue("@pono", txt_po_no.Text);
                    cmdtable.Parameters.AddWithValue("@CreatedBy", CretedBy);
                    cmdtable.Parameters.AddWithValue("@CreatedOn", DateTime.Now);
                    cmdtable.Parameters.AddWithValue("@designation", Designation);
                    cmdtable.ExecuteNonQuery();
                }
                ClientScript.RegisterStartupScript(this.GetType(), "alert", "HideLabel('Data Save Sucessfully');", true);
            }
            catch (Exception ex)
            {
                throw ex;
            }
        }
    }

    protected void btn_save_Click(object sender, EventArgs e)
    {
        Save_Record();
    }

    protected void btnCancel_Click(object sender, EventArgs e)
    {
        if (Request.QueryString["Pono"] != null)
        {
            Response.Redirect("CustomerPO_Report.aspx");
        }
        else
        {
            Response.Redirect("CustomerPO_List_Sales.aspx");
        }

    }

    [System.Web.Script.Services.ScriptMethod()]
    [System.Web.Services.WebMethod]
    public static List<string> GetDescriptionList(string prefixText, int count)
    {
        return AutoFillDescriptionlist(prefixText);
    }

    public static List<string> AutoFillDescriptionlist(string prefixText)
    {
        using (SqlConnection con = new SqlConnection())
        {
            con.ConnectionString = ConfigurationManager.ConnectionStrings["connectionString"].ConnectionString;

            using (SqlCommand com = new SqlCommand())
            {
                com.CommandText = "select DISTINCT CompName from tblComponent where " + "CompName like @Search + '%' AND isdeleted='0'";

                com.Parameters.AddWithValue("@Search", prefixText);
                com.Connection = con;
                con.Open();
                List<string> CompName = new List<string>();
                using (SqlDataReader sdr = com.ExecuteReader())
                {
                    while (sdr.Read())
                    {
                        CompName.Add(sdr["CompName"].ToString());
                    }
                }
                con.Close();
                return CompName;
            }
        }
    }

    //protected void txt_discription_TextChanged(object sender, EventArgs e)
    //{
    //    SqlDataAdapter Da = new SqlDataAdapter("SELECT * FROM tblComponent WHERE CompName='" + txt_discription.Text + "'", con);
    //    DataTable Dt = new DataTable();
    //    Da.Fill(Dt);
    //    if (Dt.Rows.Count > 0)
    //    {
    //        txt_total_amount.Text = "0";
    //        txt_discount.Text = "0";

    //        txt_hsn.Text = Dt.Rows[0]["HSN"].ToString();
    //        txt_rate.Text = Dt.Rows[0]["Rate"].ToString();
    //        txt_unit.Text = Dt.Rows[0]["Units"].ToString();
    //        txt_tax.Text = Dt.Rows[0]["Tax"].ToString();
    //    }
    //    txt_printdescription.Text = txt_discription.Text;
    //}

    //Job No Text Change
    //protected void txt_job_no_TextChanged(object sender, EventArgs e)
    //{
    //    SqlDataAdapter Da = new SqlDataAdapter("SELECT Customer_Name FROM tbl_Quotation_Hdr_Sales WHERE Customer_Name ='" + txt_Customer_name.Text + "' AND isCompleted='1'  AND IsDeleted='0'", con);
    //    DataTable Dt = new DataTable();
    //    Da.Fill(Dt);
    //    if (Dt.Rows.Count > 0)
    //    {
    //        txt_Customer_name.Text = Dt.Rows[0]["Customer_Name"].ToString();
    //    }
    //    //customer namewise information show
    //    DataTable Dtt = new DataTable();
    //    SqlDataAdapter Daa = new SqlDataAdapter("SELECT * FROM tblCustomer WHERE CustomerName='" + txt_Customer_name.Text + "'", con);
    //    Daa.Fill(Dtt);
    //    if (Dt.Rows.Count > 0)
    //    {
    //        txt_delivery_address.Text = Dtt.Rows[0]["AddresLine1"].ToString();
    //        txt_gst_no.Text = Dtt.Rows[0]["GSTNo"].ToString();
    //        txtstatecode.Text = Dtt.Rows[0]["StateCode"].ToString();
    //        txt_mobile_no.Text = Dtt.Rows[0]["MobNo"].ToString();
    //        //  txt_kind_att.Text = Dtt.Rows[0]["ContactPerName1"].ToString();
    //    }
    //    //contact person list bind
    //    DataTable dt1 = new DataTable();
    //    SqlDataAdapter sad1 = new SqlDataAdapter("select * from tblCustomerContactPerson where CustName='" + txt_Customer_name.Text + "'", con);
    //    sad1.Fill(dt1);
    //    txt_kind_att.DataTextField = "ContactPerName";

    //    txt_kind_att.DataSource = dt1;
    //    txt_kind_att.DataBind();
    //    ///Email bind
    //    DataTable dt2 = new DataTable();
    //    SqlDataAdapter sad2 = new SqlDataAdapter("select * from tblCustomerContactPerson where CustName='" + txt_Customer_name.Text + "'", con);
    //    sad2.Fill(dt2);
    //    Grd_MAIL.DataSource = dt2;
    //    Grd_MAIL.DataBind();
    //    Grd_MAIL.EmptyDataText = "Record Not Found";

    //    ////Automatic description bind in job number from quaation details table
    //    DataTable dt3 = new DataTable();
    //    SqlDataAdapter sad3 = new SqlDataAdapter("select * from vw_Quot_pdf where JobNo='" + txt_jobno.Text + "'", con);  // new change job no
    //    sad3.Fill(dt3);
    //    int count = 1;
    //    if (dt3.Rows.Count > 0)
    //    {
    //        ViewState["RowNo"] = 0;
    //        Dt_Itemsdetails.Columns.AddRange(new DataColumn[10] { new DataColumn("Id"),
    //            new DataColumn("JobNo"),  new DataColumn("CompName"),
    //            new DataColumn("HSN"), new DataColumn("Rate"),
    //            new DataColumn("Units"), new DataColumn("Qty"),
    //            new DataColumn("Tax"), new DataColumn("Disc_per"),new DataColumn("total")
    //          });

    //        ViewState["Customerdetails"] = Dt_Itemsdetails;
    //        for (int i = 0; i < dt3.Rows.Count; i++)
    //        {

    //            // Dt_Itemsdetails.Columns.AddRange(new DataColumn[10] { new DataColumn("Id"), new DataColumn("JobNo"), new DataColumn("CompName"), new DataColumn("HSN"), new DataColumn("Rate"), new DataColumn("Units"), new DataColumn("Qty"), new DataColumn("Tax"), new DataColumn("Disc_per"), new DataColumn("FTotal") });

    //            Dt_Itemsdetails.Rows.Add(count, dt3.Rows[i]["JobNo"].ToString(), dt3.Rows[i]["CompName"].ToString(), dt3.Rows[i]["HSN"].ToString(), dt3.Rows[i]["Rate"].ToString(), dt3.Rows[i]["Units"].ToString(), dt3.Rows[i]["Qty"].ToString(), dt3.Rows[i]["Tax"].ToString(), dt3.Rows[i]["Disc_per"].ToString(), dt3.Rows[i]["total"].ToString());

    //            count = count + 1;
    //        }
    //        quatationgrid.DataSource = Dt_Itemsdetails;
    //        quatationgrid.DataBind();
    //        quatationgrid.EmptyDataText = "Not Records Found";
    //    }
    //}

    protected void lnkbtnDelete_Click(object sender, EventArgs e)
    {
        GridViewRow row = (sender as LinkButton).NamingContainer as GridViewRow;

        DataTable dt = ViewState["Customerdetails"] as DataTable;
        dt.Rows.Remove(dt.Rows[row.RowIndex]);
        ViewState["Invoicedetails"] = dt;
        quatationgrid.DataSource = (DataTable)ViewState["Customerdetails"];
        quatationgrid.DataBind();
        ScriptManager.RegisterStartupScript(this, this.GetType(), "Alert", "alert('Data Delete Succesfully !!!');", true);
        ScriptManager.RegisterStartupScript(this, this.GetType(), "Success", "scrollToElement();", true);
    }
    private decimal TTotal;

    protected void check_address_CheckedChanged(object sender, EventArgs e)
    {
        if (check_addresss.Checked == true)
        {
            txtShippingAddr.Text = txt_delivery_address.Text;
        }
    }

    protected void txt_Customer_name_TextChanged(object sender, EventArgs e)
    {

        ddlQuotationno();

        SqlDataAdapter Da = new SqlDataAdapter("SELECT Customer_Name FROM tbl_Quotation_two_Hdr WHERE Customer_Name='" + txt_Customer_name.Text + "' AND isCompleted='1'  AND IsDeleted='0'", con);
        DataTable Dt = new DataTable();
        Da.Fill(Dt);
        if (Dt.Rows.Count > 0)
        {
            txt_Customer_name.Text = Dt.Rows[0]["Customer_Name"].ToString();
        }
        //customer namewise information show
        DataTable Dtt = new DataTable();
        SqlDataAdapter Daa = new SqlDataAdapter("SELECT * FROM tblCustomer WHERE CustomerName='" + txt_Customer_name.Text + "'", con);
        Daa.Fill(Dtt);
        if (Dt.Rows.Count > 0)
        {
            txt_delivery_address.Text = Dtt.Rows[0]["AddresLine1"].ToString();
            txt_gst_no.Text = Dtt.Rows[0]["GSTNo"].ToString();
            txtstatecode.Text = Dtt.Rows[0]["StateCode"].ToString();

            txt_mobile_no.Text = Dtt.Rows[0]["MobNo"].ToString();
            //txt_kind_att.Text = Dtt.Rows[0]["ContactPerName1"].ToString();
        }
        //contact person list bind
        DataTable dt1 = new DataTable();
        SqlDataAdapter sad1 = new SqlDataAdapter("select * from tblCustomerContactPerson where CustName='" + txt_Customer_name.Text + "'", con);
        sad1.Fill(dt1);
        txt_kind_att.DataTextField = "ContactPerName";

        txt_kind_att.DataSource = dt1;
        txt_kind_att.DataBind();
        ///Email bind
        DataTable dt2 = new DataTable();
        SqlDataAdapter sad2 = new SqlDataAdapter("select * from tblCustomerContactPerson where CustName='" + txt_Customer_name.Text + "'", con);
        sad2.Fill(dt2);
        Grd_MAIL.DataSource = dt2;
        Grd_MAIL.DataBind();
        Grd_MAIL.EmptyDataText = "Record Not Found";
        //GetJobNO();
        ////Automatic description bind in job number from quaation details table
        //DataTable dt3 = new DataTable();
        //SqlDataAdapter sad3 = new SqlDataAdapter("select * from vw_Quot_pdf where JobNo='" + txt_jobno.Text + "'", con);  // new change job no 
        //sad3.Fill(dt3);
        //int count = 1;
        //if (dt3.Rows.Count > 0)
        //{
        //    ViewState["RowNo"] = 0;
        //    Dt_Itemsdetails.Columns.AddRange(new DataColumn[9] { new DataColumn("Id"),
        //        new DataColumn("CompName"),  new DataColumn("HSN"),
        //          new DataColumn("Rate"), new DataColumn("Units"),
        //          new DataColumn("Qty"), new DataColumn("Tax"),
        //        new DataColumn("Disc_per"), new DataColumn("total")
        //      });

        //    ViewState["Customerdetails"] = Dt_Itemsdetails;
        //    for (int i = 0; i < dt3.Rows.Count; i++)
        //    {
        //        Dt_Itemsdetails.Rows.Add(count, dt3.Rows[i]["CompName"].ToString(), dt3.Rows[i]["HSN"].ToString(), dt3.Rows[i]["Rate"].ToString(), dt3.Rows[i]["Units"].ToString(), dt3.Rows[i]["Qty"].ToString(), dt3.Rows[i]["Tax"].ToString(), dt3.Rows[i]["Disc_per"].ToString(), dt3.Rows[i]["total"].ToString());

        //        count = count + 1;
        //    }
        //    quatationgrid.DataSource = Dt_Itemsdetails;
        //    quatationgrid.DataBind();
        //    quatationgrid.EmptyDataText = "Not Records Found";

        //}
        //  GetJobNO();
    }

    //protected void txtinvno_TextChanged(object sender, EventArgs e)
    //{
    //    SqlDataAdapter Da = new SqlDataAdapter("SELECT Customer_Name FROM tbl_Quotation_Hdr_Sales WHERE Customer_Name ='" + txt_Customer_name.Text + "' AND isCompleted='1'  AND IsDeleted='0'", con);
    //    DataTable Dt = new DataTable();
    //    Da.Fill(Dt);
    //    if (Dt.Rows.Count > 0)
    //    {
    //        txt_Customer_name.Text = Dt.Rows[0]["Customer_Name"].ToString();
    //    }
    //    //customer namewise information show
    //    DataTable Dtt = new DataTable();
    //    SqlDataAdapter Daa = new SqlDataAdapter("SELECT * FROM tblCustomer WHERE CustomerName='" + txt_Customer_name.Text + "'", con);
    //    Daa.Fill(Dtt);
    //    if (Dt.Rows.Count > 0)
    //    {
    //        txt_delivery_address.Text = Dtt.Rows[0]["AddresLine1"].ToString();
    //        txt_gst_no.Text = Dtt.Rows[0]["GSTNo"].ToString();
    //        txtstatecode.Text = Dtt.Rows[0]["StateCode"].ToString();
    //        txt_mobile_no.Text = Dtt.Rows[0]["MobNo"].ToString();
    //        //txt_kind_att.Text = Dtt.Rows[0]["ContactPerName1"].ToString();
    //    }
    //    //contact person list bind
    //    DataTable dt1 = new DataTable();
    //    SqlDataAdapter sad1 = new SqlDataAdapter("select * from tblCustomerContactPerson where CustName='" + txt_Customer_name.Text + "'", con);
    //    sad1.Fill(dt1);
    //    txt_kind_att.DataTextField = "ContactPerName";

    //    txt_kind_att.DataSource = dt1;
    //    txt_kind_att.DataBind();
    //    ///Email bind
    //    DataTable dt2 = new DataTable();
    //    SqlDataAdapter sad2 = new SqlDataAdapter("select * from tblCustomerContactPerson where CustName='" + txt_Customer_name.Text + "'", con);
    //    sad2.Fill(dt2);
    //    Grd_MAIL.DataSource = dt2;
    //    Grd_MAIL.DataBind();
    //    Grd_MAIL.EmptyDataText = "Record Not Found";

    //    ////Automatic description bind in job number from quaation details table
    //    DataTable dt3 = new DataTable();
    //    //SqlDataAdapter sad3 = new SqlDataAdapter("select * from vw_Quot_pdf where JobNo='" + txt_job_no.Text + "'", con);
    //    SqlDataAdapter sad3 = new SqlDataAdapter("select * from [tbl_Quotation_Dtl_Sales] where Quotation_no='" + txtinvno.Text + "'", con);
    //    sad3.Fill(dt3);
    //    int count = 1;
    //    if (dt3.Rows.Count > 0)
    //    {
    //        ViewState["RowNo"] = 0;
    //        Dt_Itemsdetails.Columns.AddRange(new DataColumn[9] { new DataColumn("Id"),
    //            new DataColumn("CompName"),  new DataColumn("HSN"),
    //            new DataColumn("Tax"), new DataColumn("Qty"),
    //            new DataColumn("Units"), new DataColumn("Rate"),
    //            new DataColumn("Disc_per"), new DataColumn("FTotal")
    //          });

    //        ViewState["Customerdetails"] = Dt_Itemsdetails;
    //        for (int i = 0; i < dt3.Rows.Count; i++)
    //        {
    //            Dt_Itemsdetails.Rows.Add(count, dt3.Rows[i]["JobNo"].ToString(), dt3.Rows[i]["CompName"].ToString(), dt3.Rows[i]["HSN"].ToString(), dt3.Rows[i]["Tax"].ToString(), dt3.Rows[i]["Qty"].ToString(), dt3.Rows[i]["Units"].ToString(), dt3.Rows[i]["Rate"].ToString(), dt3.Rows[i]["Disc_per"].ToString(), dt3.Rows[i]["FTotal"].ToString());

    //            count = count + 1;
    //        }
    //        quatationgrid.DataSource = Dt_Itemsdetails;
    //        quatationgrid.DataBind();
    //        quatationgrid.EmptyDataText = "Not Records Found";
    //    }
    //}

    protected void ddlquotationno_TextChanged(object sender, EventArgs e)
    {
        SqlDataAdapter Da = new SqlDataAdapter("SELECT * FROM tbl_Quotation_two_Hdr WHERE Customer_Name ='" + txt_Customer_name.Text + "' AND isCompleted='1'  AND IsDeleted='0'", con);
        DataTable Dt = new DataTable();
        Da.Fill(Dt);
        if (Dt.Rows.Count > 0)
        {
            txt_Customer_name.Text = Dt.Rows[0]["Customer_Name"].ToString();
            txtsubcust.Text = Dt.Rows[0]["SubCustomer"].ToString();
            //txtsubcust.Text = Dt.Rows[0]["Term_Condition_1"].ToString();
            //txtsubcust.Text = Dt.Rows[0]["Term_Condition_2"].ToString();
            //txtsubcust.Text = Dt.Rows[0]["Term_Condition_3"].ToString();
            //txtsubcust.Text = Dt.Rows[0]["Term_Condition_4"].ToString();
        }
        //customer namewise information show
        DataTable Dtt = new DataTable();
        SqlDataAdapter Daa = new SqlDataAdapter("SELECT * FROM tblCustomer WHERE CustomerName='" + txt_Customer_name.Text + "'", con);
        Daa.Fill(Dtt);
        if (Dt.Rows.Count > 0)
        {
            txt_delivery_address.Text = Dtt.Rows[0]["AddresLine1"].ToString();
            txt_gst_no.Text = Dtt.Rows[0]["GSTNo"].ToString();
            txtstatecode.Text = Dtt.Rows[0]["StateCode"].ToString();
            txt_mobile_no.Text = Dtt.Rows[0]["MobNo"].ToString();
            //txt_kind_att.Text = Dtt.Rows[0]["ContactPerName1"].ToString();
        }
        //contact person list bind
        DataTable dt1 = new DataTable();
        SqlDataAdapter sad1 = new SqlDataAdapter("select * from tblCustomerContactPerson where CustName='" + txt_Customer_name.Text + "'", con);
        sad1.Fill(dt1);
        txt_kind_att.DataTextField = "ContactPerName";

        txt_kind_att.DataSource = dt1;
        txt_kind_att.DataBind();
        ///Email bind
        DataTable dt2 = new DataTable();
        SqlDataAdapter sad2 = new SqlDataAdapter("select * from tblCustomerContactPerson where CustName='" + txt_Customer_name.Text + "'", con);
        sad2.Fill(dt2);
        Grd_MAIL.DataSource = dt2;
        Grd_MAIL.DataBind();
        Grd_MAIL.EmptyDataText = "Record Not Found";

        ////Automatic description bind in job number from quaation details table
        DataTable dt3 = new DataTable();
        //SqlDataAdapter sad3 = new SqlDataAdapter("select * from vw_Quot_pdf where JobNo='" + txt_job_no.Text + "'", con);
        //SqlDataAdapter sad3 = new SqlDataAdapter("select * from [tbl_Quotation_Dtl_Sales] where Quotation_no='" + ddlquotationno.SelectedItem.Text + "'", con);
        SqlDataAdapter sad3 = new SqlDataAdapter("select  product as MateName ,  Description As PrintDescription, * from [tbl_Quotation_two_Dtls] where Quotation_no='" + ddlquotationno.SelectedItem.Text + "'", con);
        sad3.Fill(dt3);
        int count = 1;
        if (dt3.Rows.Count > 0)
        {
            ViewState["RowNo"] = 0;
            Dt_Itemsdetails.Columns.AddRange(new DataColumn[12] { new DataColumn("Id"),new DataColumn("JobNo"), new DataColumn("MateName"),
                    new DataColumn("CompName"),  new DataColumn("PrintDescription"), new DataColumn("HSN"),
                    new DataColumn("Rate"),  new DataColumn("Units"),
                    new DataColumn("Qty"),  new DataColumn("Tax"),
                    new DataColumn("Disc_per"), new DataColumn("total")

                  });

            ViewState["Customerdetails"] = Dt_Itemsdetails;
            for (int i = 0; i < dt3.Rows.Count; i++)
            {
                // Dt_Itemsdetails.Columns.AddRange(new DataColumn[10] { new DataColumn("Id"), new DataColumn("JobNo"), new DataColumn("CompName"), new DataColumn("HSN"), new DataColumn("Rate"), new DataColumn("Units"), new DataColumn("Qty"), new DataColumn("Tax"), new DataColumn("Disc_per"), new DataColumn("FTotal") });    

                // Dt_Itemsdetails.Rows.Add(count,  dt3.Rows[i]["JobNo"].ToString(), dt3.Rows[i]["CompName"].ToString(), dt3.Rows[i]["HSN"].ToString(), dt3.Rows[i]["Rate"].ToString(), dt3.Rows[i]["Units"].ToString(), dt3.Rows[i]["Qty"].ToString(), dt3.Rows[i]["Tax"].ToString(), dt3.Rows[i]["Disc_per"].ToString(), dt3.Rows[i]["total"].ToString());
                Dt_Itemsdetails.Rows.Add(count, dt3.Rows[i]["JobNo"].ToString(), dt3.Rows[i]["MateName"].ToString(), dt3.Rows[i]["CompName"].ToString(), dt3.Rows[i]["PrintDescription"].ToString(), dt3.Rows[i]["HSN"].ToString(), dt3.Rows[i]["Rate"].ToString(), dt3.Rows[i]["Units"].ToString(), dt3.Rows[i]["Qty"].ToString(), dt3.Rows[i]["Tax"].ToString(), dt3.Rows[i]["Disc_per"].ToString(), dt3.Rows[i]["total"].ToString());

                count = count + 1;
            }
            quatationgrid.DataSource = Dt_Itemsdetails;
            quatationgrid.DataBind();
            quatationgrid.EmptyDataText = "Not Records Found"; //9975468880         
        }
    }

    protected void quatationgrid_RowEditing(object sender, GridViewEditEventArgs e)
    {
        quatationgrid.EditIndex = e.NewEditIndex;
        quatationgrid.DataSource = (DataTable)ViewState["Customerdetails"];
        quatationgrid.DataBind();
        ScriptManager.RegisterStartupScript(this, this.GetType(), "Success", "scrollToElement();", true);
    }

    protected void txt_rate_grdQ_TextChanged(object sender, EventArgs e)
    {
        GridViewRow row = (sender as TextBox).NamingContainer as GridViewRow;
        Grid_Calculation(row);
    }

    protected void gv_Qupdate_Click(object sender, EventArgs e)
    {
        GridViewRow row = (sender as LinkButton).NamingContainer as GridViewRow;

        //string JobNo = ((TextBox)row.FindControl("txt_Jobno_grd")).Text;
        string Description = ((TextBox)row.FindControl("txt_printdescription_grd")).Text;
        string HSN = ((TextBox)row.FindControl("txt_hsn_grd")).Text;
        string Tax = ((TextBox)row.FindControl("txt_tax_quogrd")).Text;
        string Quntity = ((TextBox)row.FindControl("txt_quntity_Quogrd")).Text;
        string Rate = ((TextBox)row.FindControl("txt_rate_Quogrd")).Text;
        string Unit = ((TextBox)row.FindControl("txt_unit_grd")).Text;
        string Disc_per = ((TextBox)row.FindControl("txt_discount_Quogrd")).Text;
        string FTotal = ((TextBox)row.FindControl("txt_total_amount_Quogrd")).Text;

        DataTable Dt = ViewState["Customerdetails"] as DataTable;

        // Dt.Rows[row.RowIndex]["JobNo"] = JobNo;
        Dt.Rows[row.RowIndex]["printdescription"] = Description;
        Dt.Rows[row.RowIndex]["HSN"] = HSN;
        Dt.Rows[row.RowIndex]["Tax"] = Tax;
        Dt.Rows[row.RowIndex]["Qty"] = Quntity;
        Dt.Rows[row.RowIndex]["Rate"] = Rate;
        Dt.Rows[row.RowIndex]["Units"] = Unit;
        Dt.Rows[row.RowIndex]["Disc_per"] = Disc_per;
        Dt.Rows[row.RowIndex]["total"] = FTotal;

        Dt.AcceptChanges();

        ViewState["Customerdetails"] = Dt;
        quatationgrid.EditIndex = -1;

        quatationgrid.DataSource = (DataTable)ViewState["Customerdetails"];
        quatationgrid.DataBind();

        //decimal grd_total;
        //if (!string.IsNullOrEmpty(txt_total_amount.Text))
        //{
        //    grd_total = 0;
        //}
        //else
        //{
        //    decimal val1 = Convert.ToDecimal(txt_total.Text);
        //    //decimal val2 = Convert.ToDecimal(txt_sgst_amt.Text);
        //    //decimal val3 = Convert.ToDecimal(txt_cgst_amt.Text);
        //    //decimal val4 = Convert.ToDecimal(txt_igst_amt.Text);
        //    //decimal val5 = Convert.ToDecimal(txt_round_off.Text);

        //    grd_total = (val1);

        //    //var grd = grd_total - val5;
        //}
        //txt_grand_total.Text = grd_total.ToString();
        //hfTotal.Value = txt_grand_total.Text;

        //string isNegative = "";
        //try
        //{
        //    //string number = hfTotal.Value;
        //    //number = Convert.ToDouble(number).ToString();

        //    //lbl_Amount_In_Word.Text = isNegative + ConvertToWords(number);


        //    string number = txt_grand_total.Text;
        //    number = Convert.ToDouble(number).ToString();

        //    lbl_Amount_In_Word.Text = isNegative + ConvertToWords(number);
        //}
        //catch (Exception)
        //{

        //    throw;
        //}
        //if (hdnPoProductTot.Value != "")
        //{
        //    decimal totaltax = 0, totalgrdtax = 0;
        //    decimal Total11177 = 0, Qty = 0, rate111111 = 0, totalrateqty = 0;
        //    foreach (GridViewRow g1 in gvPurchaseRecord.Rows)
        //    {
        //        string lbltotaltax = (g1.FindControl("lbl_tax_grd") as Label).Text;
        //        string lblrate = (g1.FindControl("lbl_rate_grd") as Label).Text;
        //        string lblqty = (g1.FindControl("lbl_quntity_grd") as Label).Text;
        //        totaltax = Convert.ToDecimal(lbltotaltax);

        //        rate111111 = Convert.ToDecimal(lblrate);
        //        Qty = Convert.ToDecimal(lblqty);
        //        Total11177 = ((Qty * rate111111) * totaltax) / 100;
        //        totalrateqty += Total11177;
        //    }
        //    totalgrdtax = totalrateqty + Convert.ToDecimal(taxhidden.Value);
        //    if (txtstatecode.Text == "27 MAHARASHTRA")
        //    {
        //        txt_cgst_amt.Text = Convert.ToDecimal(totalgrdtax / 2).ToString("##.00");
        //        txt_sgst_amt.Text = Convert.ToDecimal(totalgrdtax / 2).ToString("##.00");
        //        txt_igst_amt.Text = Convert.ToDecimal(00).ToString("##.00");
        //    }
        //    else
        //    {
        //        txt_cgst_amt.Text = Convert.ToDecimal(00).ToString("##.00");
        //        txt_sgst_amt.Text = Convert.ToDecimal(00).ToString("##.00");
        //        txt_igst_amt.Text = Convert.ToDecimal(totalgrdtax).ToString("##.00");
        //    }
        //}
        //else
        //{
        //    decimal totaltax = 0;
        //    decimal Total11177 = 0, Qty = 0, rate111111 = 0, totalrateqty = 0;s
        //    foreach (GridViewRow g1 in gvPurchaseRecord.Rows)
        //    {
        //        string lbltotaltax = (g1.FindControl("lbl_tax_grd") as Label).Text;
        //        string lblrate = (g1.FindControl("lbl_rate_grd") as Label).Text;
        //        string lblqty = (g1.FindControl("lbl_quntity_grd") as Label).Text;
        //        totaltax = Convert.ToDecimal(lbltotaltax);

        //        rate111111 = Convert.ToDecimal(lblrate);
        //        Qty = Convert.ToDecimal(lblqty);
        //        Total11177 = ((Qty * rate111111) * totaltax) / 100;
        //        totalrateqty += Total11177;
        //    }
        //    if (txtstatecode.Text == "27 MAHARASHTRA")
        //    {
        //        txt_cgst_amt.Text = Convert.ToDecimal(totalrateqty / 2).ToString("##.00");
        //        txt_sgst_amt.Text = Convert.ToDecimal(totalrateqty / 2).ToString("##.00");
        //        txt_igst_amt.Text = Convert.ToDecimal(00).ToString("##.00");
        //    }
        //    else
        //    {
        //        txt_cgst_amt.Text = Convert.ToDecimal(00).ToString("##.00");
        //        txt_sgst_amt.Text = Convert.ToDecimal(00).ToString("##.00");
        //        txt_igst_amt.Text = Convert.ToDecimal(totalrateqty).ToString("##.00");
        //    }
        //}

        ScriptManager.RegisterStartupScript(this, this.GetType(), "Success", "scrollToElement();", true);
    }

    protected void txt_rate_Quogrd_TextChanged(object sender, EventArgs e)
    {
        GridViewRow row = (sender as TextBox).NamingContainer as GridViewRow;
        QuotationGrid_Calculation(row);
    }

    protected void txt_quntity_Quogrd_TextChanged(object sender, EventArgs e)
    {
        GridViewRow row = (sender as TextBox).NamingContainer as GridViewRow;
        QuotationGrid_Calculation(row);
    }

    protected void txt_tax_quogrd_TextChanged(object sender, EventArgs e)
    {
        GridViewRow row = (sender as TextBox).NamingContainer as GridViewRow;
        QuotationGrid_Calculation(row);
    }

    protected void txt_discount_Quogrd_TextChanged(object sender, EventArgs e)
    {
        GridViewRow row = (sender as TextBox).NamingContainer as GridViewRow;
        QuotationGrid_Calculation(row);
    }

    //protected void txt_jobno_TextChanged(object sender, EventArgs e)
    //{
    //    SqlDataAdapter Da = new SqlDataAdapter("SELECT Id,JobNo,MateName FROM tblInwardEntry WHERE JobNo ='" + txt_jobno.Text + "'", con);
    //    DataTable Dt = new DataTable();
    //    Da.Fill(Dt);
    //    txtpoduct.Text = Dt.Rows[0]["MateName"].ToString();
    //}

    //Job No Against Quation No For componnt details
    //public void GetJobNO()
    //{
    //    DataTable dt = new DataTable();
    //    SqlDataAdapter sd = new SqlDataAdapter("select JobNo from  tblInwardEntry  where CustName='" + txt_Customer_name.Text + "'", con);
    //    sd.Fill(dt);

    //    if (dt.Rows.Count > 0)
    //    {
    //        txt_jobno.DataTextField = "JobNo";
    //        txt_jobno.DataSource = dt;
    //        txt_jobno.DataBind();
    //    }
    //    else
    //    {

    //    }
    //}

    private void Show_Grid1()
    {
        try
        {
            ViewState["RowNo"] = (int)ViewState["RowNo"] + 1;
            DataTable Dt = (DataTable)ViewState["CPO_Product"];
            Dt.Rows.Add(ViewState["RowNo"], txtpoduct.Text.Trim(), txt_printdescription.Text, txt_hsn.Text, txt_rate.Text, txt_unit.Text, txt_quntity.Text, txt_tax.Text, txt_discount.Text, txt_total_amount.Text);
            ViewState["CPO_Product"] = Dt;

            //txt_jobno.Text = string.Empty;
            txtpoduct.Text = string.Empty;
            //  txt_discription.Text = string.Empty;
            txt_printdescription.Text = string.Empty;
            txt_hsn.Text = string.Empty;
            txt_rate.Text = string.Empty;
            txt_unit.Text = string.Empty;
            txt_quntity.Text = string.Empty;
            txt_tax.Text = string.Empty;
            txt_discount.Text = string.Empty;
            txt_total_amount.Text = string.Empty;
            txtpoduct.Text = string.Empty;

            gvPurchaseRecord.DataSource = (DataTable)ViewState["CPO_Product"];
            gvPurchaseRecord.DataBind();
        }
        catch (Exception ex)
        {
            throw ex; //  Block of code to handle errors
        }
    }

    protected void ddlagainstby_TextChanged(object sender, EventArgs e)
    {
        if (ddlagainstby.SelectedItem.Text == "Direct")
        {
            ddlquotationno.Enabled = false;
        }
        else
        {
            ddlquotationno.Enabled = true;
        }
    }

}